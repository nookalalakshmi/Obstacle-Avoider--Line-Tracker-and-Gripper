
robokits.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000fa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000014e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000016e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000fd  00000000  00000000  00000189  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000009b  00000000  00000000  00000286  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000218  00000000  00000000  00000321  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  0000053c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000c6  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000048  00000000  00000000  00000622  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

/*----------------------------------------------------------------
-----------------MAIN PROGRAM-------------------------------------
-----------------------------------------------------------------*/
int main(void)
{
  92:	11 ba       	out	0x11, r1	; 17
	DDRD=0X00;
	DDRA=0XFF;
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	8a bb       	out	0x1a, r24	; 26
	DDRC=0XFF;
  98:	84 bb       	out	0x14, r24	; 20
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	24 ec       	ldi	r18, 0xC4	; 196
  9c:	39 e0       	ldi	r19, 0x09	; 9
	
	for(;1;)
	{
		if(bit_is_set(PIND,4))
  9e:	84 9b       	sbis	0x10, 4	; 16
  a0:	06 c0       	rjmp	.+12     	; 0xae <main+0x1c>
		{
			sbi(PORTC,0);
  a2:	a8 9a       	sbi	0x15, 0	; 21
			cbi(PORTC,1);
  a4:	a9 98       	cbi	0x15, 1	; 21
			sbi(PORTC,2);
  a6:	aa 9a       	sbi	0x15, 2	; 21
			cbi(PORTC,3);
  a8:	ab 98       	cbi	0x15, 3	; 21
			sbi(PORTA,4);
  aa:	dc 9a       	sbi	0x1b, 4	; 27
  ac:	20 c0       	rjmp	.+64     	; 0xee <main+0x5c>
		}
		else if(bit_is_set(PIND,5))
  ae:	85 9b       	sbis	0x10, 5	; 16
  b0:	06 c0       	rjmp	.+12     	; 0xbe <main+0x2c>
		{
			cbi(PORTC,0);
  b2:	a8 98       	cbi	0x15, 0	; 21
			sbi(PORTC,1);
  b4:	a9 9a       	sbi	0x15, 1	; 21
			cbi(PORTC,2);
  b6:	aa 98       	cbi	0x15, 2	; 21
			sbi(PORTC,3);
  b8:	ab 9a       	sbi	0x15, 3	; 21
			sbi(PORTA,5);
  ba:	dd 9a       	sbi	0x1b, 5	; 27
  bc:	18 c0       	rjmp	.+48     	; 0xee <main+0x5c>
		}
		else if(bit_is_set(PIND,6))
  be:	86 9b       	sbis	0x10, 6	; 16
  c0:	06 c0       	rjmp	.+12     	; 0xce <main+0x3c>
		{
			sbi(PORTC,0);
  c2:	a8 9a       	sbi	0x15, 0	; 21
			cbi(PORTC,1);
  c4:	a9 98       	cbi	0x15, 1	; 21
			cbi(PORTC,2);
  c6:	aa 98       	cbi	0x15, 2	; 21
			sbi(PORTC,3);
  c8:	ab 9a       	sbi	0x15, 3	; 21
			sbi(PORTA,6);
  ca:	de 9a       	sbi	0x1b, 6	; 27
  cc:	10 c0       	rjmp	.+32     	; 0xee <main+0x5c>
		}
		else if(bit_is_set(PIND,7))
  ce:	87 9b       	sbis	0x10, 7	; 16
  d0:	06 c0       	rjmp	.+12     	; 0xde <main+0x4c>
		{
			cbi(PORTC,0);
  d2:	a8 98       	cbi	0x15, 0	; 21
			sbi(PORTC,1);
  d4:	a9 9a       	sbi	0x15, 1	; 21
			sbi(PORTC,2);
  d6:	aa 9a       	sbi	0x15, 2	; 21
			cbi(PORTC,3);
  d8:	ab 98       	cbi	0x15, 3	; 21
			sbi(PORTA,7);
  da:	df 9a       	sbi	0x1b, 7	; 27
  dc:	08 c0       	rjmp	.+16     	; 0xee <main+0x5c>
		}		
		else
		{
			cbi(PORTC,0);
  de:	a8 98       	cbi	0x15, 0	; 21
			cbi(PORTC,1);
  e0:	a9 98       	cbi	0x15, 1	; 21
			cbi(PORTC,2);
  e2:	aa 98       	cbi	0x15, 2	; 21
			cbi(PORTC,3);
  e4:	ab 98       	cbi	0x15, 3	; 21
			cbi(PORTA,4);
  e6:	dc 98       	cbi	0x1b, 4	; 27
			cbi(PORTA,5);
  e8:	dd 98       	cbi	0x1b, 5	; 27
			cbi(PORTA,6);
  ea:	de 98       	cbi	0x1b, 6	; 27
			cbi(PORTA,7);			
  ec:	df 98       	cbi	0x1b, 7	; 27
  ee:	c9 01       	movw	r24, r18
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x5e>
  f4:	d4 cf       	rjmp	.-88     	; 0x9e <main+0xc>

000000f6 <_exit>:
  f6:	f8 94       	cli

000000f8 <__stop_program>:
  f8:	ff cf       	rjmp	.-2      	; 0xf8 <__stop_program>
