From: <Saved by Windows Internet Explorer 7>
Subject: avr-libc: Example using the two-wire interface (TWI)
Date: Mon, 26 Jan 2009 13:48:18 +0530
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01C97FBC.BEDAF690"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5579

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01C97FBC.BEDAF690
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.nongnu.org/avr-libc/user-manual/group__twi__demo.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>avr-libc: Example using the two-wire interface =
(TWI)</TITLE>
<META http-equiv=3DContent-Type =
content=3Dtext/html;charset=3Diso-8859-1><LINK=20
href=3D"http://www.nongnu.org/avr-libc/user-manual/dox.css" =
type=3Dtext/css=20
rel=3Dstylesheet>
<META content=3D"MSHTML 6.00.6000.16788" name=3DGENERATOR></HEAD>
<BODY>
<CENTER>
<TABLE width=3D"80%">
  <TBODY>
  <TR>
    <TD align=3Dleft><A href=3D"http://www.nongnu.org/avr-libc/">AVR =
Libc Home=20
      Page</A></TD>
    <TD align=3Dmiddle colSpan=3D4><IMG alt=3DAVRs=20
      src=3D"http://www.nongnu.org/avr-libc/user-manual/avrs.png" =
align=3Dmiddle=20
      border=3D0></TD>
    <TD align=3Dright><A=20
      href=3D"https://savannah.nongnu.org/projects/avr-libc/">AVR Libc =
Development=20
      Pages</A></TD></TR>
  <TR>
    <TD align=3Dmiddle width=3D"13%"><A=20
      =
href=3D"http://www.nongnu.org/avr-libc/user-manual/index.html">Main=20
    Page</A></TD>
    <TD align=3Dmiddle width=3D"13%"><A=20
      =
href=3D"http://www.nongnu.org/avr-libc/user-manual/pages.html">User=20
      Manual</A></TD>
    <TD align=3Dmiddle width=3D"13%"><A=20
      =
href=3D"http://www.nongnu.org/avr-libc/user-manual/modules.html">Library =

      Reference</A></TD>
    <TD align=3Dmiddle width=3D"13%"><A=20
      =
href=3D"http://www.nongnu.org/avr-libc/user-manual/FAQ.html">FAQ</A></TD>=

    <TD align=3Dmiddle width=3D"13%"><A=20
      =
href=3D"http://www.nongnu.org/avr-libc/user-manual/globals.html">Alphabet=
ical=20
      Index</A></TD>
    <TD align=3Dmiddle width=3D"13%"><A=20
      =
href=3D"http://www.nongnu.org/avr-libc/user-manual/group__demos.html">Exa=
mple=20
      Projects</A></TD></TR></TBODY></TABLE></CENTER>
<HR width=3D"80%">
<!-- Generated by Doxygen 1.5.7 -->
<DIV class=3Dcontents>
<H1>Example using the two-wire interface (TWI)<BR><SMALL>[<A class=3Del=20
href=3D"http://www.nongnu.org/avr-libc/user-manual/group__demos.html">Dem=
o=20
projects</A>]</SMALL> </H1>
<TABLE cellSpacing=3D0 cellPadding=3D0 border=3D0>
  <TBODY>
  <TR>
    <TD></TD></TR></TBODY></TABLE>Some newer devices of the ATmega =
series contain=20
builtin support for interfacing the microcontroller to a two-wire bus, =
called=20
TWI. This is essentially the same called I2C by Philips, but that term =
is=20
avoided in Atmel's documentation due to patenting issues.
<P>For the original Philips documentation, see
<P><A=20
href=3D"http://www.semiconductors.philips.com/buses/i2c/index.html">http:=
//www.semiconductors.philips.com/buses/i2c/index.html</A>
<H2><A class=3Danchor name=3Dtwi_demo_intro>Introduction into =
TWI</A></H2>The=20
two-wire interface consists of two signal lines named <EM>SDA</EM> =
(serial data)=20
and <EM>SCL</EM> (serial clock) (plus a ground line, of course). All =
devices=20
participating in the bus are connected together, using open-drain driver =

circuitry, so the wires must be terminated using appropriate pullup =
resistors.=20
The pullups must be small enough to recharge the line capacity in short =
enough=20
time compared to the desired maximal clock frequency, yet large enough =
so all=20
drivers will not be overloaded. There are formulas in the datasheet that =
help=20
selecting the pullups.
<P>Devices can either act as a master to the bus (i. e., they initiate a =

transfer), or as a slave (they only act when being called by a master). =
The bus=20
is multi-master capable, and a particular device implementation can act =
as=20
either master or slave at different times. Devices are addressed using a =
7-bit=20
address (coordinated by Philips) transfered as the first byte after the=20
so-called start condition. The LSB of that byte is R/~W, i. e. it =
determines=20
whether the request to the slave is to read or write data during the =
next=20
cycles. (There is also an option to have devices using 10-bit addresses =
but that=20
is not covered by this example.)
<H2><A class=3Danchor name=3Dtwi_demo_project>The TWI example =
project</A></H2>The=20
ATmega TWI hardware supports both, master and slave operation. This =
example will=20
only demonstrate how to use an AVR microcontroller as TWI master. The=20
implementation is kept simple in order to concentrate on the steps that =
are=20
required to talk to a TWI slave, so all processing is done in =
polled-mode,=20
waiting for the TWI interface to indicate that the next processing step =
is due=20
(by setting the TWINT interrupt bit). If it is desired to have the =
entire TWI=20
communication happen in "background", all this can be implemented in an=20
interrupt-controlled way, where only the start condition needs to be =
triggered=20
from outside the interrupt routine.
<P>There is a variety of slave devices available that can be connected =
to a TWI=20
bus. For the purpose of this example, an EEPROM device out of the=20
industry-standard <B>24C<EM>xx</EM></B> series has been chosen (where=20
<EM>xx</EM> can be one of <B>01</B>, <B>02</B>, <B>04</B>, <B>08</B>, or =

<B>16</B>) which are available from various vendors. The choice was =
almost=20
arbitrary, mainly triggered by the fact that an EEPROM device is being =
talked to=20
in both directions, reading and writing the slave device, so the example =
will=20
demonstrate the details of both.
<P>Usually, there is probably not much need to add more EEPROM to an =
ATmega=20
system that way: the smallest possible AVR device that offers hardware =
TWI=20
support is the ATmega8 which comes with 512 bytes of EEPROM, which is =
equivalent=20
to an 24C04 device. The ATmega128 already comes with twice as much =
EEPROM as the=20
24C16 would offer. One exception might be to use an externally connected =
EEPROM=20
device that is removable; e. g. SDRAM PC memory comes with an integrated =
TWI=20
EEPROM that carries the RAM configuration information.
<H2><A class=3Danchor name=3Dtwi_demo_src>The Source Code</A></H2>Source =
file: <A=20
href=3D"http://www.nongnu.org/avr-libc/examples/twitest/twitest.c">twites=
t.c</A>=20
<P>
<P>
<DL class=3Duser compact>
  <DT><B>Note [1]</B>
  <DD></DD></DL>The header file <CODE>&lt;<A class=3Del=20
href=3D"http://www.nongnu.org/avr-libc/user-manual/util_2twi_8h.html">uti=
l/twi.h</A>&gt;</CODE>=20
contains some macro definitions for symbolic constants used in the TWI =
status=20
register. These definitions match the names used in the Atmel datasheet =
except=20
that all names have been prefixed with <CODE>TW_</CODE>.
<P>
<DL class=3Duser compact>
  <DT><B>Note [2]</B>
  <DD></DD></DL>The clock is used in timer calculations done by the =
compiler, for=20
the UART baud rate and the TWI clock rate.
<P>
<DL class=3Duser compact>
  <DT><B>Note [3]</B>
  <DD></DD></DL>The address assigned for the 24Cxx EEPROM consists of =
1010 in the=20
upper four bits. The following three bits are normally available as =
slave=20
sub-addresses, allowing to operate more than one device of the same type =
on a=20
single bus, where the actual subaddress used for each device is =
configured by=20
hardware strapping. However, since the next data packet following the =
device=20
selection only allows for 8 bits that are used as an EEPROM address, =
devices=20
that require more than 8 address bits (24C04 and above) "steal" =
subaddress bits=20
and use them for the EEPROM cell address bits 9 to 11 as required. This =
example=20
simply assumes all subaddress bits are 0 for the smaller devices, so the =
E0, E1,=20
and E2 inputs of the 24Cxx must be grounded.
<P>
<DL class=3Duser compact>
  <DT><B>Note [4]</B>
  <DD></DD></DL>For slow clocks, enable the 2 x U[S]ART clock =
multiplier, to=20
improve the baud rate error. This will allow a 9600 Bd communication =
using the=20
standard 1 MHz calibrated RC oscillator. See also the Baud rate tables =
in the=20
datasheets.
<P>
<DL class=3Duser compact>
  <DT><B>Note [5]</B>
  <DD></DD></DL>The datasheet explains why a minimum TWBR value of 10 =
should be=20
maintained when running in master mode. Thus, for system clocks below =
3.6 MHz,=20
we cannot run the bus at the intented clock rate of 100 kHz but have to =
slow=20
down accordingly.
<P>
<DL class=3Duser compact>
  <DT><B>Note [6]</B>
  <DD></DD></DL>This function is used by the standard output facilities =
that are=20
utilized in this example for debugging and demonstration purposes.
<P>
<DL class=3Duser compact>
  <DT><B>Note [7]</B>
  <DD></DD></DL>In order to shorten the data to be sent over the TWI =
bus, the=20
24Cxx EEPROMs support multiple data bytes transfered within a single =
request,=20
maintaining an internal address counter that is updated after each data =
byte=20
transfered successfully. When reading data, one request can read the =
entire=20
device memory if desired (the counter would wrap around and start back =
from 0=20
when reaching the end of the device).
<P>
<DL class=3Duser compact>
  <DT><B>Note [8]</B>
  <DD></DD></DL>When reading the EEPROM, a first device selection must =
be made=20
with write intent (R/~W bit set to 0 indicating a write operation) in =
order to=20
transfer the EEPROM address to start reading from. This is called =
<EM>master=20
transmitter mode</EM>. Each completion of a particular step in TWI =
communication=20
is indicated by an asserted TWINT bit in TWCR. (An interrupt would be =
generated=20
if allowed.) After performing any actions that are needed for the next=20
communication step, the interrupt condition must be manually cleared by=20
<EM>setting</EM> the TWINT bit. Unlike with many other interrupt =
sources, this=20
would even be required when using a true interrupt routine, since as =
soon as=20
TWINT is re-asserted, the next bus transaction will start.
<P>
<DL class=3Duser compact>
  <DT><B>Note [9]</B>
  <DD></DD></DL>Since the TWI bus is multi-master capable, there is =
potential for=20
a bus contention when one master starts to access the bus. Normally, the =
TWI bus=20
interface unit will detect this situation, and will not initiate a start =

condition while the bus is busy. However, in case two masters were =
starting at=20
exactly the same time, the way bus arbitration works, there is always a =
chance=20
that one master could lose arbitration of the bus during any transmit =
operation.=20
A master that has lost arbitration is required by the protocol to =
immediately=20
cease talking on the bus; in particular it must not initiate a stop =
condition in=20
order to not corrupt the ongoing transfer from the active master. In =
this=20
example, upon detecting a lost arbitration condition, the entire =
transfer is=20
going to be restarted. This will cause a new start condition to be =
initiated,=20
which will normally be delayed until the currently active master has =
released=20
the bus.
<P>
<DL class=3Duser compact>
  <DT><B>Note [10]</B>
  <DD></DD></DL>Next, the device slave is going to be reselected (using =
a=20
so-called repeated start condition which is meant to guarantee that the =
bus=20
arbitration will remain at the current master) using the same slave =
address=20
(SLA), but this time with read intent (R/~W bit set to 1) in order to =
request=20
the device slave to start transfering data from the slave to the master =
in the=20
next packet.
<P>
<DL class=3Duser compact>
  <DT><B>Note [11]</B>
  <DD></DD></DL>If the EEPROM device is still busy writing one or more =
cells after=20
a previous write request, it will simply leave its bus interface drivers =
at high=20
impedance, and does not respond to a selection in any way at all. The =
master=20
selecting the device will see the high level at SDA after transfering =
the=20
SLA+R/W packet as a NACK to its selection request. Thus, the select =
process is=20
simply started over (effectively causing a <EM>repeated start =
condition</EM>),=20
until the device will eventually respond. This polling procedure is =
recommended=20
in the 24Cxx datasheet in order to minimize the busy wait time when =
writing.=20
Note that in case a device is broken and never responds to a selection =
(e. g.=20
since it is no longer present at all), this will cause an infinite loop. =
Thus=20
the maximal number of iterations made until the device is declared to be =
not=20
responding at all, and an error is returned, will be limited to =
MAX_ITER.
<P>
<DL class=3Duser compact>
  <DT><B>Note [12]</B>
  <DD></DD></DL>This is called <EM>master receiver mode</EM>: the bus =
master still=20
supplies the SCL clock, but the device slave drives the SDA line with =
the=20
appropriate data. After 8 data bits, the master responds with an ACK bit =
(SDA=20
driven low) in order to request another data transfer from the slave, or =
it can=20
leave the SDA line high (NACK), indicating to the slave that it is going =
to stop=20
the transfer now. Assertion of ACK is handled by setting the TWEA bit in =
TWCR=20
when starting the current transfer.
<P>
<DL class=3Duser compact>
  <DT><B>Note [13]</B>
  <DD></DD></DL>The control word sent out in order to initiate the =
transfer of the=20
next data packet is initially set up to assert the TWEA bit. During the =
last=20
loop iteration, TWEA is de-asserted so the client will get informed that =
no=20
further transfer is desired.
<P>
<DL class=3Duser compact>
  <DT><B>Note [14]</B>
  <DD></DD></DL>Except in the case of lost arbitration, all bus =
transactions must=20
properly be terminated by the master initiating a stop condition.
<P>
<DL class=3Duser compact>
  <DT><B>Note [15]</B>
  <DD></DD></DL>Writing to the EEPROM device is simpler than reading, =
since only a=20
master transmitter mode transfer is needed. Note that the first packet =
after the=20
SLA+W selection is always considered to be the EEPROM address for the =
next=20
operation. (This packet is exactly the same as the one above sent before =

starting to read the device.) In case a master transmitter mode transfer =
is=20
going to send more than one data packet, all following packets will be=20
considered data bytes to write at the indicated address. The internal =
address=20
pointer will be incremented after each write operation.
<P>
<DL class=3Duser compact>
  <DT><B>Note [16]</B>
  <DD></DD></DL>24Cxx devices can become write-protected by strapping =
their ~WC=20
pin to logic high. (Leaving it unconnected is explicitly allowed, and=20
constitutes logic low level, i. e. no write protection.) In case of a =
write=20
protected device, all data transfer attempts will be NACKed by the =
device. Note=20
that some devices might not implement this. </DIV>
<HR width=3D"80%">

<P>
<CENTER>Automatically generated by Doxygen 1.5.7 on 6 Nov 2008.</CENTER>
<P></P></BODY></HTML>

------=_NextPart_000_0000_01C97FBC.BEDAF690
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://www.nongnu.org/avr-libc/user-manual/avrs.png

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

------=_NextPart_000_0000_01C97FBC.BEDAF690
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.nongnu.org/avr-libc/user-manual/dox.css

BODY {
	BACKGROUND-COLOR: #feffe2
}
H1 {
	TEXT-ALIGN: center
}
A.qindex {
=09
}
A.qindexRef {
=09
}
A.el {
	FONT-WEIGHT: bold; TEXT-DECORATION: none
}
A.elRef {
	FONT-WEIGHT: bold
}
A.code {
	FONT-WEIGHT: normal; COLOR: #4444ee; TEXT-DECORATION: none
}
A.codeRef {
	FONT-WEIGHT: normal; COLOR: #4444ee
}
A:hover {
	COLOR: #600000; BACKGROUND-COLOR: #ffffff; TEXT-DECORATION: none
}
DL.el {
	MARGIN-LEFT: -1cm
}
DIV.fragment {
	BORDER-RIGHT: black thin solid; BORDER-TOP: black thin solid; =
PADDING-LEFT: 5px; BORDER-LEFT: black thin solid; COLOR: #5000a0; =
MARGIN-RIGHT: 5px; BORDER-BOTTOM: black thin solid; BACKGROUND-COLOR: =
#fffff0
}
DIV.ah {
	MARGIN-TOP: 3px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 3px; COLOR: #ffffff; =
BACKGROUND-COLOR: black
}
TD.memname {
	FONT-WEIGHT: bold; COLOR: #0050a0; WHITE-SPACE: nowrap
}
TD.memitem {
	FONT-WEIGHT: bold; COLOR: #0050a0; WHITE-SPACE: nowrap
}
.memproto {
	BORDER-RIGHT: black thin solid; BORDER-TOP: black thin solid; =
PADDING-LEFT: 5px; PADDING-BOTTOM: 5px; BORDER-LEFT: black thin solid; =
WIDTH: 50%; MARGIN-RIGHT: 5px; PADDING-TOP: 5px; BORDER-BOTTOM: black =
thin solid; BACKGROUND-COLOR: #fdfff8
}
TD.paramtype {
	FONT-WEIGHT: bold; COLOR: #0050a0; WHITE-SPACE: nowrap
}
TD.paramname {
	FONT-WEIGHT: bold; COLOR: #702020; WHITE-SPACE: nowrap
}
TD.mdRow {
	FONT-WEIGHT: bold; BACKGROUND-COLOR: #feffe2
}
TD.md {
	FONT-WEIGHT: bold; COLOR: #0050a0; BACKGROUND-COLOR: #feffe2
}
TD.mdname1 {
	FONT-WEIGHT: bold; COLOR: #702020; BACKGROUND-COLOR: #feffe2
}
TD.mdname {
	FONT-WEIGHT: bold; WIDTH: 600px; COLOR: #702020; BACKGROUND-COLOR: =
#feffe2
}
DIV.groupHeader {
	MARGIN-TOP: 12px; FONT-WEIGHT: bold; MARGIN-BOTTOM: 6px; MARGIN-LEFT: =
16px
}
DIV.groupText {
	FONT-SIZE: smaller; MARGIN-LEFT: 16px; FONT-STYLE: italic
}
FONT.keyword {
	COLOR: #008000
}
FONT.keywordtype {
	COLOR: #604020
}
FONT.keywordflow {
	COLOR: #e08000
}
FONT.comment {
	COLOR: #800000
}
FONT.preprocessor {
	COLOR: #806020
}
FONT.stringliteral {
	COLOR: #002080
}
FONT.charliteral {
	COLOR: #008080
}

------=_NextPart_000_0000_01C97FBC.BEDAF690--
