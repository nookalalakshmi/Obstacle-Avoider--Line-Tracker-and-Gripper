   1               		.file	"robokits.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  71               	.global	main
  73               	main:
   1:robokits.c    **** //			MADE BY ROBOKITS INDIA.
   2:robokits.c    **** //			VISIT US AT WWW.ROBOKITS.ORG
   3:robokits.c    **** //			PROGRAM FOR BLINKING LED'S
   4:robokits.c    **** //			WRITTEN FOR PRODUCT ID 19
   5:robokits.c    **** 
   6:robokits.c    **** /*-------------------------------------------------------------------          
   7:robokits.c    ****  Description:
   8:robokits.c    ****  Blinks all three leds at 1hz rate.
   9:robokits.c    **** 
  10:robokits.c    ****  Note:
  11:robokits.c    ****   _delay_ms() function parameter passed should not exeed
  12:robokits.c    ****  262.14ms / F_CPU in mhz.
  13:robokits.c    ****  
  14:robokits.c    ****  so for 16MHz the maximum paramer should be 16ms.
  15:robokits.c    ****  
  16:robokits.c    ****  For 1MHz it can be upto 262ms (250 is used for this example).
  17:robokits.c    ****   
  18:robokits.c    ****  Must be changed to get accurate delay at higher MHz.
  19:robokits.c    ****  
  20:robokits.c    ****  The timing will differ if the operating frequency is changed.
  21:robokits.c    **** ---------------------------------------------------------------------*/
  22:robokits.c    **** 
  23:robokits.c    **** /*----------------------------------------------------------------
  24:robokits.c    **** -----------------HEADER FILES-------------------------------------
  25:robokits.c    **** -----------------------------------------------------------------*/
  26:robokits.c    **** 
  27:robokits.c    **** #include<avr/io.h>					//HEADER FILE FOR AVR INPUT OUTPUT
  28:robokits.c    **** #include<compat/deprecated.h>		//HEADER FILE FOR FUNCTIONS LIKE SBI AND CBI
  29:robokits.c    **** #include<util/delay.h>				//HEADER FILE FOR DELAY
  30:robokits.c    **** 
  31:robokits.c    **** 
  32:robokits.c    **** /*----------------------------------------------------------------
  33:robokits.c    **** -----------------MAIN PROGRAM-------------------------------------
  34:robokits.c    **** -----------------------------------------------------------------*/
  35:robokits.c    **** int main(void)
  36:robokits.c    **** {
  74               	me size = 0 */
  76               	.LM1:
  77               		ldi r24,lo8(4)
  78               		out 55-32,r24
  37:robokits.c    **** 	DDRB=0x04;						//SET DATA DIRECTION REGISTER
  79               	on
  80               	main:
  82 0002 87BB      	.LM0:
  38:robokits.c    **** 									//SET 1 for OUTPUT PORT
  39:robokits.c    **** 									//SET 0 FOR INPUT PORT
  40:robokits.c    **** 									//ONLY PORTB.0 IS OUTPUT
  41:robokits.c    **** 									//CONFIGURE AS PER REQUIREMENT
  42:robokits.c    **** 									//DEFAULT ALL OTHERS ARE INPUT
  43:robokits.c    **** 									//CHANGE ACCORDING TO USE
  44:robokits.c    **** 	
  45:robokits.c    **** 	DDRD=0xC1;						//SET DATA DIRECTION REGISTER
  83               	0,11),8,8;;",128,0,0,0
  87               	.global	main
  89               	main:
  91               	.LM0:
  92               	.LFBB1:
   1:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
   5:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
   8:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  11:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      distribution.
  15:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  16:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  20:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  32:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  34:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  37:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  39:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \file */
  40:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     \code
  42:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     \endcode
  44:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  45:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  53:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  60:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  62:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** */
  63:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  64:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #endif
  68:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  69:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  71:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     register.
  76:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  77:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     can be achieved.
  79:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** */
  80:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** void
  81:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** {
  83:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 	);
  89:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** }
  90:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  91:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  93:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     counter register pair.
  98:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  99:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****  */
 102:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** void
 103:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** {
 105:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  93               	;;",128,0,0,0
  97               	.global	main
  99               	main:
 101               	.LM0:
 102               	.LFBB1:
 103               	/* prologue: function */
  46:robokits.c    **** 									//SET 1 for OUTPUT PORT
  47:robokits.c    **** 									//SET 0 FOR INPUT PORT
  48:robokits.c    **** 									//ONLY PORTD.7 AND PORTD.6 ARE OUTPUT
  49:robokits.c    **** 									//CONFIGURE AS PER REQUIREMENT
  50:robokits.c    **** 									//DEFAULT ALL OTHERS ARE INPUT
  51:robokits.c    **** 									//CHANGE ACCORDING TO USE	
  52:robokits.c    **** 
  53:robokits.c    **** 	while(1)						//INFINITE LOOP
  54:robokits.c    **** 	{
  55:robokits.c    **** 						//ALL LED'S OFF
  56:robokits.c    **** 		cbi(PORTD,0);						//ALL LED'S ON
 104               	0,0,0
 107               	.global	main
 109               	main:
 111               	.LM0:
 112               	.LFBB1:
 113               	/* prologue: function */
 114               	/* frame size = 0 */
 116               	.LM1:
 117               		ldi r24,lo8(4)
 118 0010 0197      		out 55-32,r24
 120               	.LM2:
 121               		ldi r24,lo8(-63)
 122               		out 49-32,r24
 123               	.LBB54:
 124               	.LBB55:
 125               	.LBB56:
 126               	.LBB57:
 128               	.Ltext1:
 130 0014 C901      	.LM3:
 131               		ldi r18,lo8(-3036)
 132               		ldi r19,hi8(-3036)
 133 0016 0197      	.L2:
 134 0018 01F4      	.LBE57:
 135               	.LBE56:
 136               	.LBE55:
 137               	.LBE54:
 139               	.Ltext2:
 141               	.LM4:
 142               		cbi 50-32,0
 143               	.LBB61:
 144               	.LBB60:
 145 001a C901      	.LBB59:
 146               	.LBB58:
 148 001c 0197      	.Ltext3:
 150               	.LM5:
 151               		movw r24,r18
 152               	/* #APP */
 153               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 154               		1: sbiw r24,1
 155               		brne 1b
 156               	 ;  0 "" 2
 157               	/* #NOAPP */
 158               	.LBE58:
 159               	.LBE59:
 160 0020 C901      	.LBE60:
 161               	.LBE61:
 162               	.LBB62:
 163 0022 0197      	.LBB63:
 164 0024 01F4      	.LBB64:
 165               	.LBB65:
 166               		movw r24,r18
 167               	/* #APP */
 168               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 169               		1: sbiw r24,1
 170               		brne 1b
 171               	 ;  0 "" 2
 172               	/* #NOAPP */
  57:robokits.c    **** 		
  58:robokits.c    **** 		_delay_ms(250);					//DELAY IN MILLISECONDS 
  59:robokits.c    **** 										//PARAMETER PASSED SHOULD NOT EXCEED 262.14MS / F_CPU IN MHZ
  60:robokits.c    **** 										//F_CPU IS DEFINED IN MAKEFILE
  61:robokits.c    **** 										//SO FOR 16MHZ SPEED THE MAXIMUM PARAMETER SHOULD BE 16MS
  62:robokits.c    **** 										//FOR 1MHZ IT CAN BE UPTO 262MS (250 IS USED FOR THIS EXAMPLE)
  63:robokits.c    **** 										//SEE AVR LIBC USER MANUAL FOR MORE DETAIL.
  64:robokits.c    **** 		_delay_ms(250);					//DELAY IN MILLISECONDS 									
  65:robokits.c    **** 		_delay_ms(250);					//DELAY IN MILLISECONDS 		
  66:robokits.c    **** 		_delay_ms(250);					//DELAY IN MILLISECONDS 
  67:robokits.c    **** 		sbi(PORTD,0);						//ALL LED'S ON
 173               	vr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 174               		1: sbiw r24,1
 175 0026 909A      		brne 1b
 176               	 ;  0 "" 2
 177               	/* #NOAPP */
 178               	.LBE65:
 179               	.LBE64:
 180               	.LBE63:
 181               	.LBE62:
 182               	.LBB66:
 183               	.LBB67:
 184 0028 C901      	.LBB68:
 185               	.LBB69:
 186               		movw r24,r18
 187 002a 0197      	/* #APP */
 188 002c 01F4      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 189               		1: sbiw r24,1
 190               		brne 1b
 191               	 ;  0 "" 2
 192               	/* #NOAPP */
 193               	.LBE69:
 194               	.LBE68:
 195               	.LBE67:
 196               	.LBE66:
 197               	.LBB70:
 198               	.LBB71:
 199 002e C901      	.LBB72:
 200               	.LBB73:
 201               		movw r24,r18
 202 0030 0197      	/* #APP */
 203 0032 01F4      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 204               		1: sbiw r24,1
 205               		brne 1b
 206               	 ;  0 "" 2
 207               	/* #NOAPP */
 208               	.LBE73:
 209               	.LBE72:
 210               	.LBE71:
 211               	.LBE70:
 213               	.Ltext4:
 215               	.LM6:
 216               		sbi 50-32,0
 217 0036 0197      	.LBB74:
 218 0038 01F4      	.LBB75:
 219               	.LBB76:
 220               	.LBB77:
 222               	.Ltext5:
 224               	.LM7:
 225               		movw r24,r18
 226               	/* #APP */
 227               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 228               		1: sbiw r24,1
 229 003a C901      		brne 1b
 230               	 ;  0 "" 2
 231               	/* #NOAPP */
 232 003c 0197      	.LBE77:
 233 003e 01F4      	.LBE76:
 234               	.LBE75:
 235               	.LBE74:
 236 0040 00C0      	.LBB78:
 237               	.LBB79:
 238               	.LBB80:
 239               	.LBB81:
 240               		movw r24,r18
 241               	/* #APP */
 242               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 243               		1: sbiw r24,1
 244               		brne 1b
DEFINED SYMBOLS
                            *ABS*:00000000 robokits.c
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:2      *ABS*:0000003f __SREG__
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:3      *ABS*:0000003e __SP_H__
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:4      *ABS*:0000003d __SP_L__
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:5      *ABS*:00000034 __CCP__
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:7      *ABS*:00000001 __zero_reg__
C:\Users\user\AppData\Local\Temp/ccMV8Kpu.s:73     .text:00000000 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
