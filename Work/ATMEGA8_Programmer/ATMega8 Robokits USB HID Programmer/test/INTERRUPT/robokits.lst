   1               		.file	"robokits.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  71               	.global	__vector_1
  73               	__vector_1:
   1:robokits.c    **** //			MADE BY ROBOKITS INDIA.
   2:robokits.c    **** //			VISIT US AT WWW.ROBOKITS.ORG
   3:robokits.c    **** //			PROGRAM FOR INTERRUPT
   4:robokits.c    **** //			WRITTEN FOR PRODUCT ID 19
   5:robokits.c    **** 
   6:robokits.c    **** /*-------------------------------------------------------------------          
   7:robokits.c    ****  Description:
   8:robokits.c    ****  This example shows how to use external interrupts so that cpu is
   9:robokits.c    ****  free for processing other things. Here cpu is used for blinking led2.
  10:robokits.c    **** 
  11:robokits.c    ****  Note:
  12:robokits.c    ****  External interrupt is generated by pressing sw1 connected to INT0.
  13:robokits.c    ****  
  14:robokits.c    ****  Led2 is blinking with normal delay routine.
  15:robokits.c    **** 
  16:robokits.c    ****  Led3 blinks on external interrupt low edge.
  17:robokits.c    ****   
  18:robokits.c    ****  Since _delay_ms() function will be affected by the interrupt generation 
  19:robokits.c    ****  and gives more delay. So, after sometime the led timing will be mismached.
  20:robokits.c    ****  
  21:robokits.c    ****  Even the timer delay is not perfectly mached to 1s. Use smaller presclar
  22:robokits.c    ****  for better operation.
  23:robokits.c    ****  
  24:robokits.c    ****   _delay_ms() function parameter passed should not exeed
  25:robokits.c    ****  262.14ms / F_CPU in mhz.
  26:robokits.c    ****  
  27:robokits.c    ****  so for 16MHz the maximum paramer should be 16ms.
  28:robokits.c    ****  
  29:robokits.c    ****  For 1MHz it can be upto 262ms (250 is used for this example).
  30:robokits.c    ****   
  31:robokits.c    ****  Must be changed to get accurate delay at higher MHz.
  32:robokits.c    ****  
  33:robokits.c    ****  The timing will differ if the operating frequency is changed.
  34:robokits.c    **** ---------------------------------------------------------------------*/
  35:robokits.c    **** 
  36:robokits.c    **** /*----------------------------------------------------------------
  37:robokits.c    **** -----------------HEADER FILES-------------------------------------
  38:robokits.c    **** -----------------------------------------------------------------*/
  39:robokits.c    **** #include <avr/io.h>
  40:robokits.c    **** #include <avr/interrupt.h>
  41:robokits.c    **** #include <util/delay.h>
  42:robokits.c    **** #include <compat/deprecated.h>		//HEADER FILE FOR FUNCTIONS LIKE SBI AND CBI
  43:robokits.c    **** 
  44:robokits.c    **** /*----------------------------------------------------------------
  45:robokits.c    **** -----------------GLOBAL VARIABLES-------------------------------------
  46:robokits.c    **** -----------------------------------------------------------------*/
  47:robokits.c    **** 
  48:robokits.c    **** static volatile uint8_t led;     // use volatile when variable is accessed from interrupts
  49:robokits.c    **** int volatile flag=33;
  50:robokits.c    **** int volatile count=0;
  51:robokits.c    **** int volatile no,no1,no2,no3=0;
  52:robokits.c    **** /*----------------------------------------------------------------
  53:robokits.c    **** -----------------FUNCTION-----------------------------------------
  54:robokits.c    **** -----------------------------------------------------------------*/
  55:robokits.c    **** 
  56:robokits.c    **** 
  57:robokits.c    **** SIGNAL(SIG_INTERRUPT0)     
  58:robokits.c    **** /* signal handler for external interrupt int0 */
  59:robokits.c    **** {
  74               	 r0,__SREG__
  75               		push r0
  76               		clr __zero_reg__
  77 0000 1F92      		push r18
  78 0002 0F92      		push r19
  79 0004 0FB6      		push r24
  80 0006 0F92      		push r25
  81 0008 1124      		push r30
  82 000a 2F93      		push r31
  83 000c 3F93      	/* prologue: Signal */
  84 000e 8F93      	/* frame size = 0 */
  86 0012 EF93      	.LM1:
  87 0014 FF93      		lds r24,count
  88               		lds r25,(count)+1
  89               		adiw r24,1
  60:robokits.c    **** 
  61:robokits.c    **** 	count++;
  90               	25
  91               		sts count,r24
  93 001a 9091 0000 	.LM2:
  94 001e 0196      		lds r24,count
  95 0020 9093 0000 		lds r25,(count)+1
  96 0024 8093 0000 		sbiw r24,4
  62:robokits.c    **** 	
  63:robokits.c    **** 	if(count==4)
  97               	L7
  98               	.L2:
 100 002c 9091 0000 	.LM3:
 101 0030 0497      		sts (count)+1,__zero_reg__
 102 0032 01F4      		sts count,__zero_reg__
 103               	.L7:
  64:robokits.c    **** 	{
  65:robokits.c    **** 		count=0;
 104               	4,lo8(5000)
 105               		ldi r25,hi8(5000)
 106 0034 1092 0000 	.LBB180:
 107 0038 1092 0000 	.LBB181:
 108               	.LBB182:
 109 003c 88E8      	.LBB183:
 111               	.Ltext1:
 113               	.LM4:
 114               		ldi r18,lo8(25)
 115               		ldi r19,hi8(25)
 116               	.L5:
   1:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
   5:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
   8:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  11:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      distribution.
  15:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  16:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  20:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  32:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  34:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  37:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  39:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \file */
  40:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     \code
  42:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     \endcode
  44:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  45:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  53:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  60:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  62:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** */
  63:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  64:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** #endif
  68:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  69:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  71:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     register.
  76:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  77:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     can be achieved.
  79:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** */
  80:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** void
  81:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** {
  83:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 	);
  89:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** }
  90:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  91:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  93:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     counter register pair.
  98:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 
  99:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h ****  */
 102:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** void
 103:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** {
 105:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 117               	
 118               	/* #APP */
 119 0040 29E1      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 120 0042 30E0      		1: sbiw r30,1
 121               		brne 1b
 122 0044 F901      	 ;  0 "" 2
 123               	/* #NOAPP */
 124               	.LBE183:
 125 0046 3197      	.LBE182:
 127               	.Ltext2:
 129               	.LM5:
 130               		sbiw r24,1
 132               	.LM6:
   1:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    All rights reserved.
   5:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
   6:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
   9:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  12:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****      distribution.
  16:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  17:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  21:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  33:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5 2007/10/28 23:25:56 joerg_wunsch Exp $ */
  34:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  35:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  38:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #include <inttypes.h>
  39:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  41:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /** \file */
  42:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     \code
  44:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     \endcode
  48:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  49:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     used.
  53:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  54:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  63:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     routines linked into the application.
  71:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  72:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  76:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** */
  77:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  78:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #endif
  82:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  83:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #ifndef F_CPU
  84:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #endif
  88:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  89:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** #endif
  92:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  93:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /**
  94:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
  95:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  96:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
  97:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
  98:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 101:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 102:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 103:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 104:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 105:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    will not be informed about this case.
 106:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****  */
 107:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** void
 108:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** _delay_us(double __us)
 109:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** {
 110:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	uint8_t __ticks;
 111:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 3e6) * __us;
 112:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 113:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 114:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 255)
 115:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	{
 116:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		_delay_ms(__us / 1000.0);
 117:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		return;
 118:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	}
 119:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	else
 120:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint8_t)__tmp;
 121:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	_delay_loop_1(__ticks);
 122:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** }
 123:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 124:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 125:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** /**
 126:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    \ingroup util_delay
 127:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 128:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 129:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 130:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 131:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 132:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 133:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 134:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 
 135:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 136:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 137:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 138:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 139:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 140:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h ****  */
 141:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** void
 142:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** {
 144:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 146:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 147:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = 1;
 148:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 149:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 	{
 150:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 151:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 152:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		while(__ticks)
 153:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 		{
 154:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 			// wait 1/10 ms
 155:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 156:c:/winavr-20080610/lib/gcc/../../avr/include/util/delay.h **** 			__ticks --;
 133               	ilogue start */
 134               	.LBE181:
 135 004a 0197      	.LBE180:
 137               	.Ltext3:
 139               	.LM7:
 140               		pop r31
 141               		pop r30
 142               		pop r25
 143               		pop r24
  66:robokits.c    **** 	}
  67:robokits.c    **** 	 _delay_ms(500);
  68:robokits.c    **** }
 144               	op r18
 145               		pop r0
 146 004e FF91      		out __SREG__,r0
 147 0050 EF91      		pop r0
 148 0052 9F91      		pop __zero_reg__
 149 0054 8F91      		reti
 157               	.Lscope1:
 159               	.global	__vector_2
 161               	__vector_2:
 163               	.LM8:
 164               	.LFBB2:
 165               		push __zero_reg__
 166               		push r0
 167               		in r0,__SREG__
 168               		push r0
  69:robokits.c    **** 
  70:robokits.c    **** 
  71:robokits.c    **** 
  72:robokits.c    **** SIGNAL(SIG_INTERRUPT1)     
  73:robokits.c    **** /* signal handler for external interrupt int0 */
  74:robokits.c    **** {
 169               	18
 170               		push r19
 171               		push r20
 172 0064 1F92      		push r21
 173 0066 0F92      		push r22
 174 0068 0FB6      		push r23
 175 006a 0F92      		push r24
 176 006c 1124      		push r25
 177 006e 2F93      	/* prologue: Signal */
 178 0070 3F93      	/* frame size = 0 */
 179 0072 4F93      	.LBB184:
 180 0074 5F93      	.LBB185:
 181 0076 6F93      	.LBB186:
 182 0078 7F93      	.LBB187:
 184 007c 9F93      	.Ltext4:
 186               	.LM9:
 187               		ldi r22,lo8(25000)
 188               		ldi r23,hi8(25000)
 189               	.LBE187:
 190               	.LBE186:
 191               	.LBE185:
 192               	.LBE184:
 193               	.LBB191:
 194               	.LBB192:
 195 007e 68EA      	.LBB193:
 196 0080 71E6      	.LBB194:
 197               		ldi r20,lo8(-15536)
 198               		ldi r21,hi8(-15536)
 199               		rjmp .L37
 200               	.L12:
 201               	.LBE194:
 202               	.LBE193:
 203               	.LBE192:
 204               	.LBE191:
 206 0084 53EC      	.Ltext5:
 208               	.LM10:
 209               		lds r18,no
 210               		lds r19,(no)+1
 211               		cpi r18,1
 212               		cpc r19,__zero_reg__
 213               		brne .L10
 214               		lds r24,no
  75:robokits.c    **** 	int d=250;
  76:robokits.c    **** 	
  77:robokits.c    **** 	while(flag==11)
  78:robokits.c    **** 	{
  79:robokits.c    **** 		if(no==1 && no==3)
 215               		68,0,81,.LM11-.LFBB2
 216               	.LM11:
 217 0088 2091 0000 		lds r24,no
 218 008c 3091 0000 		lds r25,(no)+1
 219 0090 2130      		sbiw r24,3
 220 0092 3105      		brne .L11
 222 0096 8091 0000 	.LM12:
 223 009a 9091 0000 		sts (no)+1,r19
 224 009e 0397      		sts no,r18
 225 00a0 01F4      	.L11:
  80:robokits.c    **** 		{
  81:robokits.c    **** 			if(no==3)
 226               	0,85,.LM13-.LFBB2
 227               	.LM13:
 228 00a2 8091 0000 		sbi 50-32,6
 229 00a6 9091 0000 	.LBB198:
 230 00aa 0397      	.LBB190:
 231 00ac 01F4      	.LBB189:
  82:robokits.c    **** 			{
  83:robokits.c    **** 				no=1;
 232               	8:
 234 00ae 3093 0000 	.Ltext6:
 236               	.LM14:
  84:robokits.c    **** 			}
  85:robokits.c    **** 			sbi(PORTD,6);
 237               	 r24,r22
 238               	/* #APP */
 239 00b6 969A      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 240               		1: sbiw r24,1
 241               		brne 1b
 242               	 ;  0 "" 2
 243               	/* #NOAPP */
 244               	.LBE188:
 245               	.LBE189:
 246               	.LBE190:
 247               	.LBE198:
 249               	.Ltext7:
 251 00ba 0197      	.LM15:
 252 00bc 01F4      		cbi 50-32,6
 253               	.LBB199:
 254               	.LBB200:
 255               	.LBB201:
 256               	.LBB202:
 258               	.Ltext8:
 260               	.LM16:
  86:robokits.c    **** 			_delay_ms(100);
  87:robokits.c    **** 			cbi(PORTD,6);
 261               	
 262               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 263 00be 9698      		1: sbiw r24,1
 264               		brne 1b
 265               	 ;  0 "" 2
 266               	/* #NOAPP */
 267               	.L10:
 268               	.LBE202:
 269               	.LBE201:
 270               	.LBE200:
 271               	.LBE199:
 273               	.Ltext9:
 275 00c2 0197      	.LM17:
 276 00c4 01F4      		lds r24,no
 277               		lds r25,(no)+1
 278               		sbiw r24,2
 279               		brne .L37
 281               	.LM18:
 282               		sbi 50-32,6
 283               	.LBB203:
 284               	.LBB197:
 285               	.LBB196:
  88:robokits.c    **** 			_delay_ms(100);
  89:robokits.c    **** 		}
  90:robokits.c    **** 		if(no==2)
 286               	avr-20080610/lib/gcc/../../avr/include/util/delay_basic.h",132,0,0,.Ltext10
 287               	.Ltext10:
 289 00ca 9091 0000 	.LM19:
 290 00ce 0297      		movw r24,r20
 291 00d0 01F4      	/* #APP */
  91:robokits.c    **** 		{
  92:robokits.c    **** 			sbi(PORTD,6);
 292               	5 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 293               		1: sbiw r24,1
 294 00d2 969A      		brne 1b
 295               	 ;  0 "" 2
 296               	/* #NOAPP */
 297               	.LBE195:
 298               	.LBE196:
 299               	.LBE197:
 300               	.LBE203:
 302               	.Ltext11:
 304               	.LM20:
 305               		cbi 50-32,6
 306 00d6 0197      	.LBB204:
 307 00d8 01F4      	.LBB205:
 308               	.LBB206:
 309               	.LBB207:
 311               	.Ltext12:
 313               	.LM21:
 314               		movw r24,r20
 315               	/* #APP */
  93:robokits.c    **** 			_delay_ms(200);
  94:robokits.c    **** 			cbi(PORTD,6);
 316               	610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 317               		1: sbiw r24,1
 318 00da 9698      		brne 1b
 319               	 ;  0 "" 2
 320               	/* #NOAPP */
 321               	.L37:
 322               	.LBE207:
 323               	.LBE206:
 324               	.LBE205:
 325               	.LBE204:
 327 00dc CA01      	.Ltext13:
 329               	.LM22:
 330 00de 0197      		lds r24,flag
 331 00e0 01F4      		lds r25,(flag)+1
 332               		sbiw r24,11
 333               		breq .L12
 334               		rjmp .L44
 335               	.L16:
 337               	.LM23:
 338               		lds r18,no1
 339               		lds r19,(no1)+1
 340               		cpi r18,1
 341               		cpc r19,__zero_reg__
 342               		brne .L14
 343 00e2 8091 0000 		lds r24,no1
 344 00e6 9091 0000 		lds r25,(no1)+1
 345 00ea 0B97      		sbiw r24,3
 346 00ec 01F0      		brne .L14
 348               	.LM24:
  95:robokits.c    **** 			_delay_ms(200);
  96:robokits.c    **** 		}
  97:robokits.c    **** 	}
  98:robokits.c    **** 	while(flag==12)
  99:robokits.c    **** 	{
 100:robokits.c    **** 		if(no1==1 && no1==3)
 349               	iw r24,3
 350               		brne .L15
 352 00f4 3091 0000 	.LM25:
 353 00f8 2130      		sts (no1)+1,r19
 354 00fa 3105      		sts no1,r18
 355 00fc 01F4      	.L15:
 357 0102 9091 0000 	.LM26:
 358 0106 0397      		sbi 50-32,6
 359 0108 01F4      	.LBB208:
 101:robokits.c    **** 		{
 102:robokits.c    **** 			if(no1==3)
 360               	BB210:
 361               	.LBB211:
 363 010e 9091 0000 	.Ltext14:
 365 0114 01F4      	.LM27:
 103:robokits.c    **** 			{
 104:robokits.c    **** 				no1=1;
 366               	r24,r22
 367               	/* #APP */
 368 0116 3093 0000 	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 369 011a 2093 0000 		1: sbiw r24,1
 370               		brne 1b
 105:robokits.c    **** 			}
 106:robokits.c    **** 			sbi(PORTD,6);
 371               	 "" 2
 372               	/* #NOAPP */
 373 011e 969A      	.LBE211:
 374               	.LBE210:
 375               	.LBE209:
 376               	.LBE208:
 378               	.Ltext15:
 380               	.LM28:
 381               		cbi 50-32,6
 382 0120 CB01      	.LBB215:
 383               	.LBB216:
 384               	.LBB217:
 385 0122 0197      	.LBB218:
 387               	.Ltext16:
 389               	.LM29:
 390               		movw r24,r22
 391               	/* #APP */
 392               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 393               		1: sbiw r24,1
 394               		brne 1b
 107:robokits.c    **** 			_delay_ms(100);
 108:robokits.c    **** 			cbi(PORTD,6);
 395               	.L14:
 396               	.LBE218:
 397 0126 9698      	.LBE217:
 398               	.LBE216:
 399               	.LBE215:
 401               	.Ltext17:
 403               	.LM30:
 404               		lds r24,no1
 405               		lds r25,(no1)+1
 406 0128 CB01      		sbiw r24,2
 407               		brne .L38
 409 012a 0197      	.LM31:
 410 012c 01F4      		sbi 50-32,6
 411               	.LBB219:
 412               	.LBB220:
 413               	.LBB221:
 414               	.LBB222:
 416               	.Ltext18:
 418               	.LM32:
 419               		movw r24,r20
 109:robokits.c    **** 			_delay_ms(100);
 110:robokits.c    **** 		}
 111:robokits.c    **** 		if(no1==2)
 420               	navr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 421               		1: sbiw r24,1
 422 012e 8091 0000 		brne 1b
 423 0132 9091 0000 	 ;  0 "" 2
 424 0136 0297      	/* #NOAPP */
 425 0138 01F4      	.LBE222:
 112:robokits.c    **** 		{
 113:robokits.c    **** 			sbi(PORTD,6);
 426               	1:
 427               	.LBE220:
 428 013a 969A      	.LBE219:
 430               	.Ltext19:
 432               	.LM33:
 433               		cbi 50-32,6
 434               	.LBB226:
 435               	.LBB227:
 436               	.LBB228:
 437 013c CA01      	.LBB229:
 439               	.Ltext20:
 441 0140 01F4      	.LM34:
 442               		movw r24,r20
 443               	/* #APP */
 444               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 445               		1: sbiw r24,1
 446               		brne 1b
 447               	 ;  0 "" 2
 448               	/* #NOAPP */
 449               		rjmp .L38
 114:robokits.c    **** 			_delay_ms(200);
 115:robokits.c    **** 			cbi(PORTD,6);
 450               	.LBE227:
 451               	.LBE226:
 452 0142 9698      	.LBB230:
 453               	.LBB214:
 454               	.LBB213:
 455               	.LBB212:
 456               		ldi r22,lo8(25000)
 457               		ldi r23,hi8(25000)
 458               	.LBE212:
 459               	.LBE213:
 460               	.LBE214:
 461 0144 CA01      	.LBE230:
 462               	.LBB231:
 463               	.LBB225:
 464 0146 0197      	.LBB224:
 465 0148 01F4      	.LBB223:
 466               		ldi r20,lo8(-15536)
 467               		ldi r21,hi8(-15536)
 468 014a 00C0      	.L38:
 469               	.LBE223:
 470               	.LBE224:
 471               	.LBE225:
 472               	.LBE231:
 474               	.Ltext21:
 476               	.LM35:
 477               		lds r24,flag
 478 014c 68EA      		lds r25,(flag)+1
 479 014e 71E6      		sbiw r24,12
 480               		brne .+2
 481               		rjmp .L16
 482               		rjmp .L45
 483               	.L20:
 485               	.LM36:
 486               		lds r18,no2
 487               		lds r19,(no2)+1
 488 0150 40E5      		cpi r18,1
 489 0152 53EC      		cpc r19,__zero_reg__
 490               		brne .L18
 491               		lds r24,no2
 492               		lds r25,(no2)+1
 493               		sbiw r24,3
 494               		brne .L18
 496               	.LM37:
 497               		lds r24,no2
 498               		lds r25,(no2)+1
 499 0154 8091 0000 		sbiw r24,3
 500 0158 9091 0000 		brne .L19
 502 015e 01F4      	.LM38:
 503 0160 00C0      		sts (no2)+1,r19
 504 0162 00C0      		sts no2,r18
 505               	.L19:
 116:robokits.c    **** 			_delay_ms(200);
 117:robokits.c    **** 		}
 118:robokits.c    **** 	}
 119:robokits.c    **** 	while(flag==13)
 120:robokits.c    **** 	{
 121:robokits.c    **** 		if(no2==1 && no2==3)
 506               	2:
 507               	.LBB233:
 508 0164 2091 0000 	.LBB234:
 509 0168 3091 0000 	.LBB235:
 511 016e 3105      	.Ltext22:
 513 0172 8091 0000 	.LM40:
 514 0176 9091 0000 		movw r24,r22
 515 017a 0397      	/* #APP */
 516 017c 01F4      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 122:robokits.c    **** 		{
 123:robokits.c    **** 			if(no2==3)
 517               	4,1
 518               		brne 1b
 519 017e 8091 0000 	 ;  0 "" 2
 520 0182 9091 0000 	/* #NOAPP */
 521 0186 0397      	.LBE235:
 522 0188 01F4      	.LBE234:
 124:robokits.c    **** 			{
 125:robokits.c    **** 				no2=1;
 523               	3:
 524               	.LBE232:
 526 018e 2093 0000 	.Ltext23:
 126:robokits.c    **** 			}
 127:robokits.c    **** 			sbi(PORTD,6);
 528               	:
 529               		cbi 50-32,6
 530 0192 969A      	.LBB239:
 531               	.LBB240:
 532               	.LBB241:
 533               	.LBB242:
 535               	.Ltext24:
 537               	.LM42:
 538               		movw r24,r22
 539 0194 CB01      	/* #APP */
 540               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 541               		1: sbiw r24,1
 542 0196 0197      		brne 1b
 543 0198 01F4      	 ;  0 "" 2
 544               	/* #NOAPP */
 545               	.L18:
 546               	.LBE242:
 547               	.LBE241:
 548               	.LBE240:
 549               	.LBE239:
 551               	.Ltext25:
 128:robokits.c    **** 			_delay_ms(100);
 129:robokits.c    **** 			cbi(PORTD,6);
 552               	LFBB2
 553               	.LM43:
 554 019a 9698      		lds r24,no2
 555               		lds r25,(no2)+1
 556               		sbiw r24,2
 557               		brne .L39
 559               	.LM44:
 560               		sbi 50-32,6
 561               	.LBB243:
 562               	.LBB244:
 563 019c CB01      	.LBB245:
 564               	.LBB246:
 566 019e 0197      	.Ltext26:
 568               	.LM45:
 569               		movw r24,r20
 570               	/* #APP */
 571               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 572               		1: sbiw r24,1
 573               		brne 1b
 574               	 ;  0 "" 2
 575               	/* #NOAPP */
 576               	.LBE246:
 130:robokits.c    **** 			_delay_ms(100);
 131:robokits.c    **** 		}
 132:robokits.c    **** 		if(no2==2)
 577               	:
 579 01a2 8091 0000 	.Ltext27:
 581 01aa 0297      	.LM46:
 582 01ac 01F4      		cbi 50-32,6
 133:robokits.c    **** 		{
 134:robokits.c    **** 			sbi(PORTD,6);
 583               	0:
 584               	.LBB251:
 585 01ae 969A      	.LBB252:
 586               	.LBB253:
 588               	.Ltext28:
 590               	.LM47:
 591               		movw r24,r20
 592               	/* #APP */
 593               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 594 01b0 CA01      		1: sbiw r24,1
 595               		brne 1b
 596               	 ;  0 "" 2
 597 01b2 0197      	/* #NOAPP */
 598 01b4 01F4      		rjmp .L39
 599               	.L45:
 600               	.LBE253:
 601               	.LBE252:
 602               	.LBE251:
 603               	.LBE250:
 604               	.LBB254:
 605               	.LBB238:
 606               	.LBB237:
 135:robokits.c    **** 			_delay_ms(200);
 136:robokits.c    **** 			cbi(PORTD,6);
 607               	000)
 608               		ldi r23,hi8(25000)
 609 01b6 9698      	.LBE236:
 610               	.LBE237:
 611               	.LBE238:
 612               	.LBE254:
 613               	.LBB255:
 614               	.LBB249:
 615               	.LBB248:
 616               	.LBB247:
 617               		ldi r20,lo8(-15536)
 618 01b8 CA01      		ldi r21,hi8(-15536)
 619               	.L39:
 620               	.LBE247:
 621 01ba 0197      	.LBE248:
 622 01bc 01F4      	.LBE249:
 623               	.LBE255:
 625 01be 00C0      	.Ltext29:
 627               	.LM48:
 628               		lds r24,flag
 629               		lds r25,(flag)+1
 630               		sbiw r24,13
 631               		brne .+2
 632               		rjmp .L20
 633               		rjmp .L46
 634               	.L24:
 636 01c2 71E6      	.LM49:
 637               		lds r18,no3
 638               		lds r19,(no3)+1
 639               		cpi r18,1
 640               		cpc r19,__zero_reg__
 641               		brne .L22
 642               		lds r24,no3
 643               		lds r25,(no3)+1
 644               		sbiw r24,3
 645 01c4 40E5      		brne .L22
 647               	.LM50:
 648               		lds r24,no3
 649               		lds r25,(no3)+1
 650               		sbiw r24,3
 651               		brne .L23
 653               	.LM51:
 654               		sts (no3)+1,r19
 655               		sts no3,r18
 656 01c8 8091 0000 	.L23:
 658 01d0 0D97      	.LM52:
 659 01d2 01F4      		sbi 50-32,6
 660 01d4 00C0      	.LBB256:
 661 01d6 00C0      	.LBB257:
 662               	.LBB258:
 137:robokits.c    **** 			_delay_ms(200);
 138:robokits.c    **** 		}
 139:robokits.c    **** 	}
 140:robokits.c    **** 	while(flag==10)
 141:robokits.c    **** 	{
 142:robokits.c    **** 		if(no3==1 && no3==3)
 663               	nclude/util/delay_basic.h",132,0,0,.Ltext30
 664               	.Ltext30:
 666 01dc 3091 0000 	.LM53:
 667 01e0 2130      		movw r24,r22
 668 01e2 3105      	/* #APP */
 669 01e4 01F4      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 670 01e6 8091 0000 		1: sbiw r24,1
 671 01ea 9091 0000 		brne 1b
 672 01ee 0397      	 ;  0 "" 2
 673 01f0 01F4      	/* #NOAPP */
 143:robokits.c    **** 		{
 144:robokits.c    **** 			if(no3==3)
 674               	BE258:
 675               	.LBE257:
 676 01f2 8091 0000 	.LBE256:
 678 01fa 0397      	.Ltext31:
 145:robokits.c    **** 			{
 146:robokits.c    **** 				no3=1;
 680               	
 681               		cbi 50-32,6
 682 01fe 3093 0000 	.LBB263:
 683 0202 2093 0000 	.LBB264:
 684               	.LBB265:
 147:robokits.c    **** 			}
 148:robokits.c    **** 			sbi(PORTD,6);
 685               	266:
 687 0206 969A      	.Ltext32:
 689               	.LM55:
 690               		movw r24,r22
 691               	/* #APP */
 692               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 693               		1: sbiw r24,1
 694               		brne 1b
 695               	 ;  0 "" 2
 696 0208 CB01      	/* #NOAPP */
 697               	.L22:
 698               	.LBE266:
 699 020a 0197      	.LBE265:
 700 020c 01F4      	.LBE264:
 701               	.LBE263:
 703               	.Ltext33:
 705               	.LM56:
 706               		lds r24,no3
 707               		lds r25,(no3)+1
 708               		sbiw r24,2
 149:robokits.c    **** 			_delay_ms(100);
 150:robokits.c    **** 			cbi(PORTD,6);
 709               	155,.LM57-.LFBB2
 710               	.LM57:
 711 020e 9698      		sbi 50-32,6
 712               	.LBB267:
 713               	.LBB268:
 714               	.LBB269:
 715               	.LBB270:
 717               	.Ltext34:
 719               	.LM58:
 720 0210 CB01      		movw r24,r20
 721               	/* #APP */
 722               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 723 0212 0197      		1: sbiw r24,1
 724 0214 01F4      		brne 1b
 725               	 ;  0 "" 2
 726               	/* #NOAPP */
 727               	.LBE270:
 728               	.LBE269:
 729               	.LBE268:
 730               	.LBE267:
 732               	.Ltext35:
 151:robokits.c    **** 			_delay_ms(100);
 152:robokits.c    **** 		}
 153:robokits.c    **** 		if(no3==2)
 734               	74:
 735               	.LBB275:
 736 0216 8091 0000 	.LBB276:
 737 021a 9091 0000 	.LBB277:
 739 0220 01F4      	.Ltext36:
 154:robokits.c    **** 		{
 155:robokits.c    **** 			sbi(PORTD,6);
 740               	n	68,0,105,.LM60-.LFBB2
 741               	.LM60:
 742 0222 969A      		movw r24,r20
 743               	/* #APP */
 744               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 745               		1: sbiw r24,1
 746               		brne 1b
 747               	 ;  0 "" 2
 748               	/* #NOAPP */
 749               		rjmp .L40
 750               	.L46:
 751 0224 CA01      	.LBE277:
 752               	.LBE276:
 753               	.LBE275:
 754 0226 0197      	.LBE274:
 755 0228 01F4      	.LBB278:
 756               	.LBB262:
 757               	.LBB261:
 758               	.LBB260:
 759               		ldi r22,lo8(25000)
 760               		ldi r23,hi8(25000)
 761               	.LBE260:
 762               	.LBE261:
 763               	.LBE262:
 156:robokits.c    **** 			_delay_ms(200);
 157:robokits.c    **** 			cbi(PORTD,6);
 764               	3:
 765               	.LBB272:
 766 022a 9698      	.LBB271:
 767               		ldi r20,lo8(-15536)
 768               		ldi r21,hi8(-15536)
 769               	.L40:
 770               	.LBE271:
 771               	.LBE272:
 772               	.LBE273:
 773               	.LBE279:
 775 022c CA01      	.Ltext37:
 777               	.LM61:
 778 022e 0197      		lds r24,flag
 779 0230 01F4      		lds r25,(flag)+1
 780               		sbiw r24,10
 781               		brne .+2
 782 0232 00C0      		rjmp .L24
 784               	.LM62:
 785               		lds r24,flag
 786               		lds r25,(flag)+1
 787               		sbiw r24,33
 788               		brne .L27
 789               		ldi r18,lo8(250)
 790               		ldi r19,hi8(250)
 791               	.LBB280:
 792 0234 68EA      	.LBB281:
 793 0236 71E6      	.LBB282:
 794               	.LBB283:
 796               	.Ltext38:
 798               	.LM63:
 799               		ldi r20,lo8(-3036)
 800               		ldi r21,hi8(-3036)
 801               	.L26:
 802 0238 40E5      	.LBE283:
 803 023a 53EC      	.LBE282:
 804               	.LBE281:
 805               	.LBE280:
 807               	.Ltext39:
 809               	.LM64:
 810               		sbi 50-32,6
 812               	.LM65:
 813 023c 8091 0000 		sbi 50-32,7
 814 0240 9091 0000 	.LBB287:
 815 0244 0A97      	.LBB286:
 816 0246 01F4      	.LBB285:
 817 0248 00C0      	.LBB284:
 158:robokits.c    **** 			_delay_ms(200);
 159:robokits.c    **** 		}
 160:robokits.c    **** 	}
 161:robokits.c    **** if(flag==33)
 818               	util/delay_basic.h",132,0,0,.Ltext40
 819               	.Ltext40:
 821 024e 9091 0000 	.LM66:
 822 0252 8197      		movw r24,r20
 823 0254 01F4      	/* #APP */
 824 0256 2AEF      	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 825 0258 30E0      		1: sbiw r24,1
 826               		brne 1b
 827               	 ;  0 "" 2
 828               	/* #NOAPP */
 829               	.LBE284:
 830               	.LBE285:
 831               	.LBE286:
 832               	.LBE287:
 834 025a 44E2      	.Ltext41:
 836               	.LM67:
 837               		cbi 50-32,6
 839               	.LM68:
 840               		cbi 50-32,7
 841               	.LBB288:
 842               	.LBB289:
 162:robokits.c    **** {
 163:robokits.c    **** 		for(d;d<3000 ;d=d+250)
 164:robokits.c    **** 		{
 165:robokits.c    **** 			sbi(PORTD,6);
 843               		"c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h",132,0,0,.Ltext42
 844               	.Ltext42:
 166:robokits.c    **** 			sbi(PORTD,7);
 846               	69:
 847               		movw r24,r20
 848 0260 979A      	/* #APP */
 849               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 850               		1: sbiw r24,1
 851               		brne 1b
 852               	 ;  0 "" 2
 853               	/* #NOAPP */
 854               	.LBE291:
 855               	.LBE290:
 856               	.LBE289:
 857 0262 CA01      	.LBE288:
 859               	.Ltext43:
 861 0266 01F4      	.LM70:
 862               		sbic 48-32,3
 863               		rjmp .L27
 865               	.LM71:
 866               		subi r18,lo8(-(250))
 867               		sbci r19,hi8(-(250))
 868               		ldi r24,hi8(3000)
 869               		cpi r18,lo8(3000)
 167:robokits.c    **** 			_delay_ms(250);
 168:robokits.c    **** 			cbi(PORTD,6);
 870               	.L27:
 871               	/* epilogue start */
 169:robokits.c    **** 			cbi(PORTD,7);
 873               	72:
 874               		pop r25
 875 026a 9798      		pop r24
 876               		pop r23
 877               		pop r22
 878               		pop r21
 879               		pop r20
 880               		pop r19
 881               		pop r18
 882               		pop r0
 883               		out __SREG__,r0
 884 026c CA01      		pop r0
 885               		pop __zero_reg__
 886               		reti
 891               	.Lscope2:
 893               	.global	main
 895               	main:
 170:robokits.c    **** 			_delay_ms(250);
 171:robokits.c    **** 			if(bit_is_clear(PIND,3))
 897               	
 898               		push r13
 899 0272 8399      		push r14
 900 0274 00C0      		push r15
 901               		push r16
 902               		push r17
 903 0276 2650      		push r28
 904 0278 3F4F      		push r29
 905 027a 8BE0      	/* prologue: function */
 906 027c 283B      	/* frame size = 0 */
 908 0280 01F4      	.LM74:
 909               		ldi r24,lo8(1)
 910               		out 55-32,r24
 172:robokits.c    **** 			{
 173:robokits.c    **** 			}
 174:robokits.c    **** 			else
 175:robokits.c    **** 			{break;}
 176:robokits.c    **** 		}
 177:robokits.c    **** 
 178:robokits.c    **** 	}
 179:robokits.c    **** 
 180:robokits.c    **** }
 911               	202,.LM75-.LFBB3
 912               	.LM75:
 913 0282 9F91      		ldi r24,lo8(-64)
 914 0284 8F91      		out 49-32,r24
 916 0288 6F91      	.LM76:
 917 028a 5F91      		sbi 56-32,0
 919 028e 3F91      	.LM77:
 920 0290 2F91      		sbi 50-32,2
 922 0294 0FBE      	.LM78:
 923 0296 0F90      		sbi 50-32,3
 925 029a 1895      	.LM79:
 926               		ldi r24,lo8(-128)
 927               		out 91-32,r24
 929               	.LM80:
 930               		ldi r24,lo8(8)
 931               		out 85-32,r24
 933               	.LM81:
 934               	/* #APP */
 181:robokits.c    **** 
 182:robokits.c    **** 
 183:robokits.c    **** 
 184:robokits.c    **** 	
 185:robokits.c    **** 
 186:robokits.c    **** 
 187:robokits.c    **** 
 188:robokits.c    **** /*-----------------MAIN PROGRAM-------------------------------------
 189:robokits.c    **** ----------------------------------------------------------------
 190:robokits.c    **** -----------------------------------------------------------------*/
 191:robokits.c    **** 
 192:robokits.c    **** int main(void)
 193:robokits.c    **** {    
 935               	sei
 936               	 ;  0 "" 2
 937               	/* #NOAPP */
 938 029c CF92      	.LBB292:
 939 029e DF92      	.LBB293:
 940 02a0 EF92      	.LBB294:
 941 02a2 FF92      	.LBB295:
 943 02a6 1F93      	.Ltext44:
 945 02aa DF93      	.LM82:
 946               		ldi r20,lo8(-3036)
 947               		ldi r21,hi8(-3036)
 194:robokits.c    **** 	DDRB=0x01;						//SET DATA DIRECTION REGISTER
 948               	294:
 949               	.LBE293:
 950 02ac 81E0      	.LBE292:
 195:robokits.c    **** 									//SET 1 for OUTPUT PORT
 196:robokits.c    **** 									//SET 0 FOR INPUT PORT
 197:robokits.c    **** 									//ONLY PORTB.0 IS OUTPUT
 198:robokits.c    **** 									//CONFIGURE AS PER REQUIREMENT
 199:robokits.c    **** 									//DEFAULT ALL OTHERS ARE INPUT
 200:robokits.c    **** 									//CHANGE ACCORDING TO USE
 201:robokits.c    **** 	
 202:robokits.c    **** 	DDRD=0xC0;						//SET DATA DIRECTION REGISTER
 952               	xt45:
 954 02b0 80EC      	.LM83:
 955 02b2 81BB      		ldi r19,lo8(64)
 203:robokits.c    **** 									//SET 1 for OUTPUT PORT
 204:robokits.c    **** 									//SET 0 FOR INPUT PORT
 205:robokits.c    **** 									//ONLY PORTD.7 AND PORTD.6 ARE OUTPUT
 206:robokits.c    **** 									//CONFIGURE AS PER REQUIREMENT
 207:robokits.c    **** 									//DEFAULT ALL OTHERS ARE INPUT
 208:robokits.c    **** 									//CHANGE ACCORDING TO USE
 209:robokits.c    **** 	
 210:robokits.c    **** 	sbi(PORTB,0);					//LED1 ON (INDICATION FOR READY TO USE)
 956               	 r12,r19
 958 02b4 C09A      	.LM84:
 211:robokits.c    **** 	
 212:robokits.c    **** 	sbi(PORTD,2);					//ENABLE PULL UP FOR SW1
 959               	i r18,lo8(2)
 960               		mov r13,r18
 213:robokits.c    **** 	sbi(PORTD,3);					//ENABLE PULL UP FOR SW2
 962               	85:
 963               		ldi r16,lo8(10)
 964 02b8 939A      		ldi r17,hi8(10)
 214:robokits.c    ****     
 215:robokits.c    ****     GIMSK = _BV(INT1);
 965               	tabn	68,0,258,.LM86-.LFBB3
 966               	.LM86:
 967 02ba 80E8      		ldi r28,lo8(13)
 968 02bc 8BBF      		ldi r29,hi8(13)
 216:robokits.c    ****     MCUCR = _BV(ISC11);
 969               	abn	68,0,251,.LM87-.LFBB3
 970               	.LM87:
 971 02be 88E0      		ldi r26,lo8(12)
 972 02c0 85BF      		ldi r27,hi8(12)
 217:robokits.c    ****   // MCUCR=0x00;
 218:robokits.c    **** 	
 219:robokits.c    ****     
 220:robokits.c    **** 	sei();                       	// enable interrupts 
 973               	abn	68,0,243,.LM88-.LFBB3
 974               	.LM88:
 975               		ldi r22,lo8(11)
 976               		ldi r23,hi8(11)
 978               	.LM89:
 979               		ldi r25,lo8(-128)
 980               		mov r14,r25
 982               	.LM90:
 983               		ldi r24,lo8(8)
 984               		mov r15,r24
 985               	.LBB299:
 986               	.LBB300:
 987               	.LBB301:
 988 02c4 44E2      	.LBB302:
 990               	.Ltext46:
 992               	.LM91:
 993               		ldi r18,lo8(25)
 994               		ldi r19,hi8(25)
 995               	.L67:
 221:robokits.c    ****     
 222:robokits.c    **** 	
 223:robokits.c    ****     for (;;) 					 	//BLINK LED2
 224:robokits.c    **** 	{	
 225:robokits.c    **** 		sbi(PORTD,6);
 226:robokits.c    **** 		sbi(PORTD,7);
 227:robokits.c    **** 		_delay_ms(250);
 228:robokits.c    **** 		cbi(PORTD,6);
 229:robokits.c    **** 		cbi(PORTD,7);
 230:robokits.c    **** 		_delay_ms(250);
 231:robokits.c    **** 		if(bit_is_clear(PIND,3))
 232:robokits.c    **** 		{
 233:robokits.c    **** 			cbi(PORTD,6);
 234:robokits.c    **** 			cbi(PORTD,7);
 235:robokits.c    **** 			while(bit_is_clear(PIND,3))
 236:robokits.c    **** 			{
 237:robokits.c    **** 				GIMSK = _BV(INT0);
 996               	00:
 997               	.LBE299:
 999 02ca C32E      	.Ltext47:
 238:robokits.c    **** 				MCUCR = 0x02;
 1000               	abn	68,0,225,.LM92-.LFBB3
 1001               	.LM92:
 1002 02cc 22E0      		sbi 50-32,6
 239:robokits.c    **** 				
 240:robokits.c    **** 
 241:robokits.c    **** 				if(count==1)
 242:robokits.c    **** 				{
 243:robokits.c    **** 					flag=11;
 244:robokits.c    **** 					sbi(PORTD,6);
 245:robokits.c    **** 					cbi(PORTD,7);
 246:robokits.c    **** 					
 247:robokits.c    **** 				}
 248:robokits.c    **** 				
 249:robokits.c    **** 				else if(count==2)
 250:robokits.c    **** 				{
 251:robokits.c    **** 					flag=12;
 252:robokits.c    **** 					sbi(PORTD,7);
 253:robokits.c    **** 					cbi(PORTD,6);
 254:robokits.c    **** 					
 255:robokits.c    **** 				}
 256:robokits.c    **** 				else if(count==3)
 257:robokits.c    **** 				{
 258:robokits.c    **** 					flag=13;
 259:robokits.c    **** 					sbi(PORTD,6);
 260:robokits.c    **** 					sbi(PORTD,7);
 261:robokits.c    **** 					
 262:robokits.c    **** 				}
 263:robokits.c    **** 				
 264:robokits.c    **** 				  else
 265:robokits.c    **** 				{
 266:robokits.c    **** 					flag=10;
 1004               	3:
 1005               		sbi 50-32,7
 1006 02d0 0AE0      	.LBB306:
 1007 02d2 10E0      	.LBB298:
 1008               	.LBB297:
 1009               	.LBB296:
 1011 02d6 D0E0      	.Ltext48:
 1013               	.LM94:
 1014 02d8 ACE0      		movw r24,r20
 1015 02da B0E0      	/* #APP */
 1016               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1017               		1: sbiw r24,1
 1018 02dc 6BE0      		brne 1b
 1019 02de 70E0      	 ;  0 "" 2
 267:robokits.c    **** 					cbi(PORTD,6);
 268:robokits.c    **** 					cbi(PORTD,7);
 269:robokits.c    **** 					
 270:robokits.c    **** 				}
 271:robokits.c    **** 
 272:robokits.c    **** 			
 273:robokits.c    **** 					
 274:robokits.c    **** 			}
 275:robokits.c    **** 
 276:robokits.c    **** 		}
 277:robokits.c    **** 		if(flag==11 || flag==12 || flag==13 || flag==10)
 278:robokits.c    **** 		{ 
 279:robokits.c    **** 			//fl11();
 280:robokits.c    **** 			GIMSK=_BV(INT1);
 1020               	E296:
 1021               	.LBE297:
 1022 02e0 90E8      	.LBE298:
 1023 02e2 E92E      	.LBE306:
 281:robokits.c    **** 			MCUCR=_BV(ISC11);
 1024               	abs	"robokits.c",132,0,0,.Ltext49
 1025               	.Ltext49:
 1027 02e6 F82E      	.LM95:
 1028               		cbi 50-32,6
 1030               	.LM96:
 1031               		cbi 50-32,7
 1032               	.LBB307:
 1033               	.LBB308:
 1034               	.LBB309:
 1035               	.LBB310:
 1037 02ea 30E0      	.Ltext50:
 1039               	.LM97:
 1040               		movw r24,r20
 1041               	/* #APP */
 1042               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1043               		1: sbiw r24,1
 1044               		brne 1b
 1045               	 ;  0 "" 2
 1046               	/* #NOAPP */
 1047 02ec 969A      	.LBE310:
 1048               	.LBE309:
 1049               	.LBE308:
 1050 02ee 979A      	.LBE307:
 1052               	.Ltext51:
 1054               	.LM98:
 1055               		sbic 48-32,3
 1056               		rjmp .L48
 1057               		rjmp .L78
 1058               	.L53:
 1060               	.LM99:
 1061               		out 91-32,r12
 1063 02f4 01F4      	.LM100:
 1064               		out 85-32,r13
 1066               	.LM101:
 1067               		lds r24,count
 1068               		lds r25,(count)+1
 1069               		sbiw r24,1
 1070               		brne .L50
 1072               	.LM102:
 1073               		sts (flag)+1,r23
 1074 02f6 9698      		sts flag,r22
 1076               	.LM103:
 1077 02f8 9798      		sbi 50-32,6
 1078               		rjmp .L79
 1079               	.L50:
 1081               	.LM104:
 1082               		lds r24,count
 1083               		lds r25,(count)+1
 1084               		sbiw r24,2
 1085               		brne .L51
 1087               	.LM105:
 1088               		sts (flag)+1,r27
 1089 02fc 0197      		sts flag,r26
 1091               	.LM106:
 1092               		sbi 50-32,7
 1094               	.LM107:
 1095               		cbi 50-32,6
 1096               		rjmp .L77
 1097               	.L51:
 1099               	.LM108:
 1100               		lds r24,count
 1101 0300 8399      		lds r25,(count)+1
 1102 0302 00C0      		sbiw r24,3
 1103 0304 00C0      		brne .L52
 1105               	.LM109:
 1106               		sts (flag)+1,r29
 1107 0306 CBBE      		sts flag,r28
 1109               	.LM110:
 1110 0308 D5BE      		sbi 50-32,6
 1112               	.LM111:
 1113 030a 8091 0000 		sbi 50-32,7
 1114 030e 9091 0000 		rjmp .L77
 1115 0312 0197      	.L52:
 1117               	.LM112:
 1118               		sts (flag)+1,r17
 1119 0316 7093 0000 		sts flag,r16
 1120 031a 6093 0000 	.L78:
 1122               	.LM113:
 1123 031e 969A      		cbi 50-32,6
 1124 0320 00C0      	.L79:
 1126               	.LM114:
 1127               		cbi 50-32,7
 1128 0322 8091 0000 	.L77:
 1130 032a 0297      	.LM115:
 1131 032c 01F4      		sbis 48-32,3
 1132               		rjmp .L53
 1133               	.L48:
 1135 0332 A093 0000 	.LM116:
 1136               		lds r24,flag
 1137               		lds r25,(flag)+1
 1138 0336 979A      		sbiw r24,11
 1139               		breq .L54
 1140               		lds r24,flag
 1141 0338 9698      		lds r25,(flag)+1
 1142 033a 00C0      		sbiw r24,12
 1143               		breq .L54
 1144               		lds r24,flag
 1145               		lds r25,(flag)+1
 1146 033c 8091 0000 		sbiw r24,13
 1147 0340 9091 0000 		breq .L54
 1148 0344 0397      		lds r24,flag
 1149 0346 01F4      		lds r25,(flag)+1
 1150               		sbiw r24,10
 1151               		breq .+2
 1152 0348 D093 0000 		rjmp .L55
 1153 034c C093 0000 	.L54:
 1155               	.LM117:
 1156 0350 969A      		out 91-32,r14
 1158               	.LM118:
 1159 0352 979A      		out 85-32,r15
 1161               	.LM119:
 1162               		lds r24,flag
 1163               		lds r25,(flag)+1
 1164 0356 1093 0000 		sbiw r24,11
 1165 035a 0093 0000 		brne .L56
 1167               	.LM120:
 1168               		lds r24,no
 1169 035e 9698      		lds r25,(no)+1
 1170               		adiw r24,1
 1171               		sts (no)+1,r25
 1172               		sts no,r24
 1173 0360 9798      		ldi r24,lo8(25000)
 1174               		ldi r25,hi8(25000)
 1175               	.L57:
 1176               	.LBB311:
 1177 0362 839B      	.LBB312:
 1178 0364 00C0      	.LBB313:
 1179               	.LBB314:
 1181               	.Ltext52:
 1183 036a 9091 0000 	.LM121:
 1184 036e 0B97      		movw r30,r18
 1185 0370 01F0      	/* #APP */
 1186 0372 8091 0000 	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1187 0376 9091 0000 		1: sbiw r30,1
 1188 037a 0C97      		brne 1b
 1189 037c 01F0      	 ;  0 "" 2
 1190 037e 8091 0000 	/* #NOAPP */
 1191 0382 9091 0000 	.LBE314:
 1192 0386 0D97      	.LBE313:
 1194 038a 8091 0000 	.Ltext53:
 1196 0392 0A97      	.LM122:
 1197 0394 01F0      		sbiw r24,1
 1199               	.LM123:
 1200               		brne .L57
 1201               		ldi r24,lo8(25000)
 1202 0398 EBBE      		ldi r25,hi8(25000)
 1203               	.L58:
 1204               	.LBE312:
 1205 039a F5BE      	.LBE311:
 282:robokits.c    **** 			if(flag==11)
 1206               	r30,r18
 1207               	/* #APP */
 1208 039c 8091 0000 	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1209 03a0 9091 0000 		1: sbiw r30,1
 1210 03a4 0B97      		brne 1b
 1211 03a6 01F4      	 ;  0 "" 2
 283:robokits.c    **** 			{
 284:robokits.c    **** 				no++;
 1212               	APP */
 1213               	.LBE318:
 1214 03a8 8091 0000 	.LBE317:
 1216 03b0 0196      	.Ltext55:
 1218 03b6 8093 0000 	.LM125:
 1219 03ba 88EA      		sbiw r24,1
 1221               	.LM126:
 1222               		brne .L58
 1223               	.L56:
 1224               	.LBE316:
 1225               	.LBE315:
 1227               	.Ltext56:
 1229               	.LM127:
 1230 03be F901      		lds r24,flag
 1231               		lds r25,(flag)+1
 1232               		sbiw r24,12
 1233 03c0 3197      		brne .L59
 1235               	.LM128:
 1236               		lds r24,no1
 1237               		lds r25,(no1)+1
 1238               		adiw r24,1
 1239               		sts (no1)+1,r25
 1240               		sts no1,r24
 1241               		ldi r24,lo8(25000)
 1242               		ldi r25,hi8(25000)
 1243 03c4 0197      	.L60:
 1244               	.LBB319:
 1245               	.LBB320:
 1246 03c6 01F4      	.LBB321:
 1247 03c8 88EA      	.LBB322:
 1249               	.Ltext57:
 1251               	.LM129:
 1252               		movw r30,r18
 1253               	/* #APP */
 1254               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1255               		1: sbiw r30,1
 1256               		brne 1b
 1257               	 ;  0 "" 2
 1258               	/* #NOAPP */
 1259               	.LBE322:
 1260 03cc F901      	.LBE321:
 1262               	.Ltext58:
 1264 03d0 01F4      	.LM130:
 1265               		sbiw r24,1
 1267               	.LM131:
 1268               		brne .L60
 1269               		ldi r24,lo8(25000)
 1270               		ldi r25,hi8(25000)
 1271               	.L61:
 1272               	.LBE320:
 1273 03d2 0197      	.LBE319:
 1274               	.LBB323:
 1275               	.LBB324:
 1276 03d4 01F4      	.LBB325:
 1277               	.LBB326:
 1279               	.Ltext59:
 1281               	.LM132:
 285:robokits.c    **** 				_delay_ms(2500);
 286:robokits.c    **** 				_delay_ms(2500);
 287:robokits.c    **** 
 288:robokits.c    **** 			}
 289:robokits.c    **** 			if(flag==12)
 1282               	/include/util/delay_basic.h" 1
 1283               		1: sbiw r30,1
 1284 03d6 8091 0000 		brne 1b
 1285 03da 9091 0000 	 ;  0 "" 2
 1286 03de 0C97      	/* #NOAPP */
 1287 03e0 01F4      	.LBE326:
 290:robokits.c    **** 			{
 291:robokits.c    **** 				no1++;
 1288               	5:
 1290 03e2 8091 0000 	.Ltext60:
 1292 03ea 0196      	.LM133:
 1293 03ec 9093 0000 		sbiw r24,1
 1295 03f4 88EA      	.LM134:
 1296 03f6 91E6      		brne .L61
 1297               	.L59:
 1298               	.LBE324:
 1299               	.LBE323:
 1301               	.Ltext61:
 1303               	.LM135:
 1304               		lds r24,flag
 1305               		lds r25,(flag)+1
 1306 03f8 F901      		sbiw r24,13
 1307               		brne .L62
 1309 03fa 3197      	.LM136:
 1310 03fc 01F4      		lds r24,no2
 1311               		lds r25,(no2)+1
 1312               		adiw r24,1
 1313               		sts (no2)+1,r25
 1314               		sts no2,r24
 1315               		ldi r24,lo8(25000)
 1316               		ldi r25,hi8(25000)
 1317               	.L63:
 1318               	.LBB327:
 1319 03fe 0197      	.LBB328:
 1320               	.LBB329:
 1321               	.LBB330:
 1323 0402 88EA      	.Ltext62:
 1325               	.LM137:
 1326               		movw r30,r18
 1327               	/* #APP */
 1328               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1329               		1: sbiw r30,1
 1330               		brne 1b
 1331               	 ;  0 "" 2
 1332               	/* #NOAPP */
 1333               	.LBE330:
 1334               	.LBE329:
 1336 0406 F901      	.Ltext63:
 1338               	.LM138:
 1339 0408 3197      		sbiw r24,1
 1341               	.LM139:
 1342               		brne .L63
 1343               		ldi r24,lo8(25000)
 1344               		ldi r25,hi8(25000)
 1345               	.L64:
 1346               	.LBE328:
 1347               	.LBE327:
 1348               	.LBB331:
 1349 040c 0197      	.LBB332:
 1350               	.LBB333:
 1351               	.LBB334:
 1353               	.Ltext64:
 1355               	.LM140:
 1356               		movw r30,r18
 1357               	/* #APP */
 292:robokits.c    **** 				_delay_ms(2500);
 293:robokits.c    **** 				_delay_ms(2500);
 294:robokits.c    **** 			}
 295:robokits.c    **** 			if(flag==13)
 1358               	.h" 1
 1359               		1: sbiw r30,1
 1360 0410 8091 0000 		brne 1b
 1361 0414 9091 0000 	 ;  0 "" 2
 1362 0418 0D97      	/* #NOAPP */
 1363 041a 01F4      	.LBE334:
 296:robokits.c    **** 			{
 297:robokits.c    **** 				no2++;
 1364               	3:
 1366 041c 8091 0000 	.Ltext65:
 1368 0424 0196      	.LM141:
 1369 0426 9093 0000 		sbiw r24,1
 1371 042e 88EA      	.LM142:
 1372 0430 91E6      		brne .L64
 1373               	.L62:
 1374               	.LBE332:
 1375               	.LBE331:
 1377               	.Ltext66:
 1379               	.LM143:
 1380               		lds r24,flag
 1381               		lds r25,(flag)+1
 1382 0432 F901      		sbiw r24,10
 1383               		brne .L55
 1385 0434 3197      	.LM144:
 1386 0436 01F4      		lds r24,no3
 1387               		lds r25,(no3)+1
 1388               		adiw r24,1
 1389               		sts (no3)+1,r25
 1390               		sts no3,r24
 1391               		ldi r24,lo8(25000)
 1392               		ldi r25,hi8(25000)
 1393               	.L65:
 1394               	.LBB335:
 1395 0438 0197      	.LBB305:
 1396               	.LBB304:
 1397               	.LBB303:
 1399 043c 88EA      	.Ltext67:
 1401               	.LM145:
 1402               		movw r30,r18
 1403               	/* #APP */
 1404               	 ;  105 "c:/winavr-20080610/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1405               		1: sbiw r30,1
 1406               		brne 1b
 1407               	 ;  0 "" 2
 1408               	/* #NOAPP */
 1409               	.LBE303:
 1410               	.LBE304:
 1412 0440 F901      	.Ltext68:
 1414               	.LM146:
 1415 0442 3197      		sbiw r24,1
 1417               	.LM147:
 1418               		brne .L65
 1419               		ldi r24,lo8(25000)
 1420               		ldi r25,hi8(25000)
 1421               	.L66:
 1422               	.LBE305:
 1423               	.LBE335:
 1424               	.LBB336:
 1425 0446 0197      	.LBB337:
 1426               	.LBB338:
 1427               	.LBB339:
 1429               	.Ltext69:
 1431               	.LM148:
 1432               		movw r30,r18
 1433               	/* #APP */
 298:robokits.c    **** 				_delay_ms(2500);
 299:robokits.c    **** 				_delay_ms(2500);
 300:robokits.c    **** 			}
 301:robokits.c    **** 			if(flag==10)
 1434               	.h" 1
 1435               		1: sbiw r30,1
 1436 044a 8091 0000 		brne 1b
 1437 044e 9091 0000 	 ;  0 "" 2
 1438 0452 0A97      	/* #NOAPP */
 1439 0454 01F4      	.LBE339:
 302:robokits.c    **** 			{
 303:robokits.c    **** 				no3++;
 1440               	10/lib/gcc/../../avr/include/util/delay_basic.h" 1
 1441               		1: sbiw r30,1
 1442 0456 8091 0000 		brne 1b
 1443 045a 9091 0000 	 ;  0 "" 2
 1444 045e 0196      	/* #NOAPP */
 1445 0460 9093 0000 	.LBE339:
 1446 0464 8093 0000 	.LBE338:
 1448 046a 91E6      	.Ltext70:
 1450               	.LM149:
 1451               		sbiw r24,1
 1453               	.LM150:
 1454               		brne .L66
 1455               	.L55:
 1456               	.LBE337:
 1457               	.LBE336:
 1459               	.Ltext71:
 1461 046e 3197      	.LM151:
 1462 0470 01F4      		out 91-32,r14
 1464               	.LM152:
 1465               		out 85-32,r15
 1466               		rjmp .L67
 304:robokits.c    **** 				_delay_ms(2500);
 305:robokits.c    **** 				_delay_ms(2500);
 306:robokits.c    **** 			}
 307:robokits.c    **** 		}
 308:robokits.c    **** 	
 309:robokits.c    **** 		GIMSK = _BV(INT1);
 1510               	BE329-.LFBB3
 310:robokits.c    **** 		MCUCR = _BV(ISC11);
 1513               	-.LFBB3
 1526               	.Lscope3:
 1527               	.global	flag
 1528               		.data
 1531               	flag:
 1532               		.word	33
 1533               	.global	count
 1534               	.global	count
 1535               		.section .bss
 1538               	count:
 1539               		.skip 2,0
 1540               	.global	no3
 1541               	.global	no3
 1544               	no3:
 1545               		.skip 2,0
 1546               		.comm no,2,1
 1547               		.comm no1,2,1
 1548               		.comm no2,2,1
 1555               		.text
 1557               	.Letext0:
 1558               	...
DEFINED SYMBOLS
                            *ABS*:00000000 robokits.c
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:2      *ABS*:0000003f __SREG__
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:3      *ABS*:0000003e __SP_H__
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:4      *ABS*:0000003d __SP_L__
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:5      *ABS*:00000034 __CCP__
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:7      *ABS*:00000001 __zero_reg__
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:73     .text:00000000 __vector_1
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:1584   .bss:00000000 count
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:168    .text:00000064 __vector_2
                            *COM*:00000002 no
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:1577   .data:00000000 flag
                            *COM*:00000002 no1
                            *COM*:00000002 no2
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:1590   .bss:00000002 no3
C:\Users\ankit\AppData\Local\Temp/cc6snGAe.s:934    .text:0000029c main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
