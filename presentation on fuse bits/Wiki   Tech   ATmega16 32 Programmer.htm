<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0088)http://74.125.153.132/search?q=cache:http://kartikmohta.com/wiki/Tech/ATmega16Programmer -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><META http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<!-- <BASE href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer"> --><BASE href="."><TITLE>Wiki | Tech / ATmega16/32 Programmer </TITLE><META http-equiv="Content-Style-Type" content="text/css"><LINK rel="stylesheet" href="http://kartikmohta.com/wiki/pub/skins/pmwiki/pmwiki.css" type="text/css"><STYLE type="text/css"><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .vspace { margin-top:1.33em; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
   
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }

--></STYLE><LINK rel="stylesheet" type="text/css" href="http://kartikmohta.com/wiki/pub/fox/fox.css" media="screen"><META name="robots" content="index,follow"></HEAD><BODY><DIV style="margin:-1px -1px 0;padding:0;border:1px solid #999;background:#fff"><DIV style="margin:12px;padding:8px;border:1px solid #999;background:#ddd;font:13px arial,sans-serif;color:#000;font-weight:normal;text-align:left">This is Google&#39;s cache of <A href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer" style="text-decoration:underline;color:#00c">http://kartikmohta.com/wiki/Tech/ATmega16Programmer</A>. It is a snapshot of the page as it appeared on 18 May 2009 06:49:38 GMT. The <A href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer" style="text-decoration:underline;color:#00c">current page</A> could have changed in the meantime. <A href="http://www.google.com/intl/en/help/features_list.html#cached" style="text-decoration:underline;color:#00c">Learn more</A><BR><BR><DIV style="float:right"><A href="http://74.125.153.132/search?q=cache:http://kartikmohta.com/wiki/Tech/ATmega16Programmer&hl=en&strip=1" style="text-decoration:underline;color:#00c">Text-only version</A></DIV>
<DIV>&nbsp;</DIV></DIV></DIV><DIV style="position:relative">



  
  
  
  <!--HTMLHeader-->
  



<!--PageHeaderFmt-->
  <DIV id="wikilogo"><A href="http://kartikmohta.com/wiki"><IMG src="http://kartikmohta.com/wiki/pub/skins/pmwiki/pmwiki-32.gif" alt="Wiki" border="0"></A></DIV>
  <DIV id="wikihead">
  <FORM action="http://kartikmohta.com/wiki">
    <SPAN class="headnav"><A href="http://kartikmohta.com/wiki/Tech/RecentChanges" accesskey="c">Recent Changes</A> -</SPAN>
    <INPUT type="hidden" name="n" value="Tech.ATmega16Programmer">
    <INPUT type="hidden" name="action" value="search">
    <A href="http://kartikmohta.com/wiki/Site/Search">Search</A>:
    <INPUT type="text" name="q" value="" class="inputbox searchbox">
    <INPUT type="submit" class="inputbutton searchbutton" value="Go"></FORM></DIV>
<!--/PageHeaderFmt-->
  <TABLE id="wikimid" width="100&percnt;" cellspacing="0" cellpadding="0"><TBODY><TR>
<!--PageLeftFmt-->
      <TD id="wikileft" valign="top">
        <UL><LI><A class="wikilink" href="http://kartikmohta.com/wiki/Main/HomePage">Home</A>
</LI><LI><A class="wikilink" href="http://kartikmohta.com/wiki/Tech/Tech">Tech</A>
<DIV class="vspace"></DIV></LI><LI><A class="wikilink" href="http://kartikmohta.com/wiki/Main/WikiSandbox">WikiSandbox</A>
</LI></UL><DIV class="vspace"></DIV>
</TD>
<!--/PageLeftFmt-->
      <TD id="wikibody" valign="top">
<!--PageActionFmt-->
        <DIV id="wikicmds"><UL><LI class="browse">      <A accesskey="" rel="nofollow" class="selflink" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer">View</A>
</LI><LI class="edit">      <A accesskey="e" rel="nofollow" class="wikilink" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer?action=edit">Edit</A>
</LI><LI class="diff">   <A accesskey="h" rel="nofollow" class="wikilink" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer?action=diff">History</A>
</LI><LI class="print">     <A accesskey="" rel="nofollow" class="wikilink" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer?action=print">Print</A>
</LI></UL>
</DIV>
<!--PageTitleFmt-->
        <DIV id="wikititle">
          <DIV class="pagegroup"><A href="http://kartikmohta.com/wiki/Tech">Tech</A> /</DIV>
          <H1 class="pagetitle">ATmega16/32 Programmer</H1></DIV>
<!--PageText-->
<DIV id="wikitext">
<P>The Atmel ATmega series of microcontrollers are very popular due to the large number of peripherals inbuilt in them. They have features such as internal PWM channels, 10-bit A/D converters, UART/USART and much more, which are useful for a lot of applications and external hardware is reduced as these are built-in.
</P>
<P class="vspace">The programmer shown below is a SPI based in-circuit programmer, meaning that you can program your microcontroller while it is placed in your application circuit, although you&#39;ll have to remove the external connections from the pins used by the programmer (MOSI, MISO, SCK, RESET) while programming. The interface is called &quot;BSD&quot;, which is pretty standard, so you won&#39;t have much problem with software support.
</P><H2>Hardware</H2>
<P><STRONG>Note:</STRONG> Do not skip any resistor. They are for the protection of your Parallel Port.
</P>
<P class="vspace">You can skip the crystal and the two capacitors, since the AVR comes with its built-in oscillator, which is turned on by default. It has 1 MHz frequency and is good enough for general purposes, but is not good for precise timing applications like serial communication. For such applications, you need put the external oscillator and write the proper fuse bits to enable it.
</P>
<DIV class="vspace"></DIV><DIV style="text-align: center;"><A class="urllink" href="http://kartikmohta.com/tech/avr/programmer/avr_programmer.png" rel="nofollow"><IMG src="http://kartikmohta.com/tech/avr/programmer/th_avr_programmer.png" alt="Programmer Schematic" title="Programmer Schematic"></A></DIV>
<DIV class="vspace"></DIV><H2>Software</H2>
<P>After making the programmer, you would need some software to first compile the C code you write to a hex file and then to write this hex file onto the microcontroller.
</P>
<P class="vspace">One good part about using AVR devices is that GCC has support for AVR. GCC is available for both Linux and Windows, so you won&#39;t have problems of writing codes in different operating systems.
</P>
<DIV class="vspace"></DIV><H3>Linux</H3>
<P>You will need the following packages:
</P><UL><LI>avr-gcc
</LI><LI>avr-binutils
</LI><LI>avr-libc
</LI><LI>avrdude (the program which actually writes data on the microcontroller)
</LI></UL><P class="vspace">You will need a Makefile to simplify the generation of the hex file to be burnt onto the microcontroller. Take it from <A class="urllink" href="http://kartikmohta.com/tech/avr/programmer/Makefile.txt" rel="nofollow">here</A>. The Makefile has been taken from <A class="urllink" href="http://electrons.psychogenic.com/" rel="nofollow">http://electrons.psychogenic.com</A> and changed a bit for the bsd programmer and the ATmega16 microcontroller. While using it, put your source filename after PRJSRC (line 79). If you are using ATmega32, then you would also need to change the MCU option (line 68) to atmega32.
</P>
<P class="vspace">After making the changes necessary, save the Makefile in the same directory as your source file. Then give the following commands in order:
</P>
<P class="vspace">
</P><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped">$ make hex
$ make install
</PRE>
<P class="vspace">The first command generates the hex file which would be burnt onto the microcontroller. The second one actually calls avrdude which writes the hex file onto the microcontroller. If there is some problem of permission while writing to the parallel port, then you will have to change the permissions of /dev/parport0 device. Give the following command as root:
</P>
<DIV class="vspace"></DIV><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped"># chmod a+rwx /dev/parport0
</PRE>
<P class="vspace">For writing to the microcontroller you will need to have the /dev/parport0 device. If the /dev/parport0 device does not exist, then issue the following commands as root:
</P>
<DIV class="vspace"></DIV><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped"># modprobe parport
# mknod /dev/parport0 c 99 0
</PRE>
<P class="vspace">If that does not work, you will have to recompile your kernel with the PPDEV option enabled.
</P>
<DIV class="vspace"></DIV><H3>Windows</H3>
<P>Download <A class="urllink" href="http://winavr.sourceforge.net/" rel="nofollow">WinAVR</A>. It includes all the utilities required (avr-gcc, avr-libc, avr-binutils and avrdude).
</P>
<P class="vspace">Once you have WinAVR installed, you need at least two files: your program (ending in .c) and a makefile. You can use the Programmer&#39;s Notepad to write your programs. The makefile can be generated using the MakeFile Generator or else you can also use the <A class="urllink" href="http://kartikmohta.com/tech/avr/programmer/Makefile.txt" rel="nofollow">same file</A> as in Linux. I prefer the latter approach. In the Makefile generator, choose the proper options, and give the C source file. Save the Makefile in the same directory as your source file. If you used the Makefile from in the Linux section, you need to make the changes as given above and also have to change the AVRDUDE_PORT to lpt1 instead of /dev/parport0 (line 111).
</P>
<P class="vspace"><STRONG>Note for WinXP/Windows 2000:</STRONG> You need to install a driver (provided with WinAVR) to be able to write directly to the parallel port. Go to the directory where you installed WINAVR, then go into bin. There you will find a file called &quot;install_giveio.bat&quot;. Run that file, it will install the driver it requires. You just have to do this once.
</P>
<P class="vspace">If you used the Makefile Generator, you can use the Programmer&#39;s Notepad to compile and write the program onto the microcontroller. Choose &quot;Tools-&gt;[WINAVR] Make All&quot; to compile. Check for errors, and then &quot;Tools-&gt;[WINAVR] Program&quot; to write the code onto the microcontroller.
</P>
<P class="vspace">If you used the Linux Makefile, you will need to use the command prompt. Start the command prompt and go to the directory where your C files are kept. Then you can just use the same commands as in Linux:
</P>
<DIV class="vspace"></DIV><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped">make hex
make install
</PRE>
<DIV class="vspace"></DIV><H2>Fuse bits</H2>
<P>The AVR microcontrollers are shipped with the internal oscillator (1 MHz) turned on. To use an external oscillator (which is necessary if you want better precision or faster speed), you will have to change the internal fuse bits. For details you can look up the Datasheet. Here note that 1 = Disabled while 0 = Enabled.
</P>
<P class="vspace"><STRONG>Low Byte</STRONG>
</P><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped">Bit             Bit No.  Description                  Default Value 
BODLEVEL        7        Brown-out Det. trig. level   1 (unprogrammed) 
BODEN           6        Brown-out Detector enable    1 (unprogrammed)
SUT1            5        Select start-up time         1 (unprogrammed)
SUT0            4        Select start-up time         0 (programmed)
CKSEL3          3        Select Clock source          0 (programmed)
CKSEL2          2        Select Clock source          0 (programmed)
CKSEL1          1        Select Clock source          0 (programmed)
CKSEL0          0        Select Clock source          1 (unprogrammed)
</PRE>
<P class="vspace"><CODE>My choice: 1 1 1 0 1 1 1 1 = 0xEF (This would enable the external oscillator)</CODE>
</P>
<P class="vspace"><STRONG>High Byte</STRONG>
</P><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped">Bit             Bit No.  Description                  Default Value 
OCDEN           7        Enable OCD                   1 (unprogrammed)
JTAGEN          6        Enable JTAG                  0 (programmed)
SPIEN           5        Enable SPI Downloading       0 (programmed)
CKOPT           4        Oscillator options           1 (unprogrammed) 
EESAVE          3        EEPROM memory is preserved   1 (unprogrammed)
BOOTSZ1         2        Select Boot Size             0 (programmed)
BOOTSZ0         1        Select Boot Size             0 (programmed)
BOOTRST         0        Select reset vector          1 (unprogrammed)
</PRE>
<P class="vspace"><CODE>My choice: 1 1 0 0 1 0 0 1 = 0xC9 (Disables JTAG which when enabled causes problems in normal I/O use of PortC pins)</CODE>
</P>
<P class="vspace"><STRONG>Note:</STRONG> The above values are for ATmega16, if you have ATmega32, check the Datasheet. I haven&#39;t verified if they are same or not.
</P>
<P class="vspace">To write the values of the fuses using avrdude, use the following command:
</P>
<P class="vspace"><STRONG>Linux</STRONG>
</P><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped">$ avrdude -c bsd -p m16 -P /dev/parport0 -U lfuse:w:0xEF:m -U hfuse:w:0xC9:m
</PRE>
<P class="vspace"><STRONG>Windows</STRONG>
</P><PRE style="background-color: #eeeeee; border: 1px solid #888888; padding: 6px;" class="escaped">avrdude -c bsd -p m16 -P lpt1 -U lfuse:w:0xEF:m -U hfuse:w:0xC9:m
</PRE>
</DIV>

      </TD>
    </TR></TBODY></TABLE>
<!--PageFooterFmt-->
  <DIV id="wikifoot">
    <DIV class="footnav">
      <A rel="nofollow" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer?action=edit">Edit</A> -
      <A rel="nofollow" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer?action=diff">History</A> -
      <A rel="nofollow" href="http://kartikmohta.com/wiki/Tech/ATmega16Programmer?action=print" target="_blank">Print</A> -
      <A href="http://kartikmohta.com/wiki/Tech/RecentChanges">Recent Changes</A> -
      <A href="http://kartikmohta.com/wiki/Site/Search">Search</A></DIV>
    <DIV class="lastmod">Page last modified on February 01, 2009, at 03:33 AM IST</DIV></DIV>
<!--HTMLFooter-->
<!-- Google Analytics Code Start -->
<SCRIPT type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</SCRIPT><SCRIPT src="./Wiki   Tech   ATmega16 32 Programmer_files/ga.js" type="text/javascript"></SCRIPT>
<SCRIPT type="text/javascript">
try{
var pageTracker = _gat._getTracker("UA-3222813-2");
pageTracker._trackPageview();
} catch(err) {}
</SCRIPT>
<!-- Google Analytics Code End -->

<!-- Woopra Code Start -->
<SCRIPT type="text/javascript">
var _wh = ((document.location.protocol=='https:') ? "https://sec1.woopra.com" : "http://static.woopra.com");
document.write(unescape("%3Cscript src='" + _wh + "/js/woopra.js' type='text/javascript'%3E%3C/script%3E"));
</SCRIPT><SCRIPT src="http://static.woopra.com/js/woopra.js" type="text/javascript"></SCRIPT>
<!-- Woopra Code End -->



</DIV></BODY></HTML>